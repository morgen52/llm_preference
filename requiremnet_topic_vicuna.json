{
  "c": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "zTEDMUy_35",
      "label": "software development",
      "abstract": "The conversation discusses the concept of the `execve` function in Linux and its effects on replacing the current program with a new one, particularly focusing on deleting existing area structs in the user portion of the current process's virtual address. The conversation also delves into the `mmap` function in Linux, explaining how it creates new virtual memory areas and maps objects into them, along with details on the `munmap` function."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "zTEDMUy_45",
      "label": "software development",
      "abstract": "The conversation provides an explanation and detailed code example of a C program that uses `mmap` to copy a file to standard output. It includes discussions on file operations like opening, mapping files into memory, writing to standard output, error handling, and closing files. Inline comments and explanations are also included."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "zTEDMUy_54",
      "label": "software development",
      "abstract": "The conversation is about a code snippet in C programming language that reads a file, maps it into memory, and writes its content to stdout. The user expresses a desire to have their comments maintained in the code."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "d3Xzz0R_75",
      "label": "data processing",
      "abstract": "The conversation involves updating and structuring code for defining tasks and workflows, as well as constructing a session with workflow data. Additionally, the conversation includes generating YAML files for task definitions, discussing JSON tags in YAML files, and displaying the data structure for task definitions and task parameters."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "d3Xzz0R_89",
      "label": "data processing",
      "abstract": "The conversation includes the display and explanation of various data structures such as TaskParameter, TaskDefinition, Session, Task, Workflow, ParamSet, and RoutingSet. Examples in different formats (JSON, YAML, and BSON) for Workflow data structure are also provided."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "woKSpfM_7",
      "label": "software development",
      "abstract": "The conversation covers topics related to generating assembly code for different processor organizations, analyzing cache behavior using 2-way set associative cache with LRU replacement, calculating average access time for processes using L1 and L2 caches, and implementing an OpenMP program in C for counting persons entering a lift."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "qgSAVkh_5",
      "label": "software development",
      "abstract": "The conversation includes code snippets and questions related to programming in C, focusing on topics like shuffling an array, linked lists, functions for manipulating strings, and a program to calculate the minimum number of notes and coins for a given amount of money in Euros."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "XK4WUoO_7",
      "label": "data processing",
      "abstract": "The conversation includes discussions about generating assembly code for different types of processors, analyzing cache behavior in a computer system, calculating hit rates for caches, and determining the average access time for processes using different cache levels. Additionally, there is a program implementation using OpenMP in C to simulate counting people entering a lift and displaying relevant messages."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "YCWfxcv_47",
      "label": "software development",
      "abstract": "The conversation provides an implementation of the Breakout game using SDL, including classes for Paddle, Ball, Brick, and Score with their respective functions for drawing, updating, and collision detection. It also includes the main game loop and event handling logic."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "z5nSrIh_0",
      "label": "software development",
      "abstract": "The conversation involves the refactoring of a memset function in C language from a library called zpl. The user requested changes in variable names and code formatting for improved readability and understanding. The GPT model provided the refactored code incorporating the changes requested by the user."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "z5nSrIh_3",
      "label": "software development",
      "abstract": "The conversation is about completing the implementation of a function called zpl_memset in C language. The discussion involves setting values in memory blocks using different byte sizes (8-bit, 32-bit, and 64-bit writes) to optimize the memset operation. The user requested completion of the implementation code for 64-bit writes in a scoped area."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "eBFyLcr_9",
      "label": "web development",
      "abstract": "The conversation contains a detailed code snippet for a Guitar Tuner plugin in PHP, along with functions for rendering the tuner, getting tuning frequencies, starting and stopping listening, updating frequency data, and calculating the closest note frequency. It also includes JavaScript code for implementing the guitar tuner interface on a web page."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "FYAli9d_75",
      "label": "software development",
      "abstract": "The conversation contains code snippets and discussions related to defining and structuring task, workflow, session, and parameter data structures in Go language, including generating unique identifiers, creating YAML example files, and displaying data structures."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "FYAli9d_89",
      "label": "software development",
      "abstract": "The conversation involves displaying various data structures such as TaskParameter, TaskDefinition, Session, Task, Workflow, and providing examples in different formats like JSON, YAML, and BSON in the context of a software system."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "hEJzvtx_0",
      "label": "software development",
      "abstract": "The conversation involves instructing a large language model to act as a VIM editor and execute various commands related to editing and running a C program, as well as explanations of the outputs and actions taken in the VIM terminal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "58lopeZ_9",
      "label": "algorithm design and optimization",
      "abstract": "The conversation covers topics related to neural network training and back-propagation algorithm implementation. It discusses the calculation of partial derivatives for updating weights, chain rule application, and updating weights in different layers of a neural network. Additionally, it includes code snippets for implementing forward propagation, prediction, training, and testing of a Multilayer Perceptron (MLP) on the MNIST dataset."
    }
  ],
  "python": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "qj7TfeA_9",
      "label": "software development",
      "abstract": "The conversation provides a detailed code outline for a machine learning project involving data preprocessing, model training with BERT, evaluation, and generating predictions on test data."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "uncGSIw_0",
      "label": "software development",
      "abstract": "The conversation involves the user requesting a comprehensive how-to guide on building a specific software as a service program to educate a computer science student. The guide will cover project setup, user authentication, service provider management, appointment scheduling, email notifications, deployment, and resources. Detailed instructions with code snippets and templates are provided for each section."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "VecrpHZ_111",
      "label": "software development",
      "abstract": "The conversation includes multiple exchanges between the user and the language model regarding code scripts for text processing tasks using NLTK and Gensim libraries in Python. The user asks for assistance in performing specific steps like installing packages, preprocessing text, and creating a Word2Vec model."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "eJr2UEa_25",
      "label": "software development",
      "abstract": "The conversation discusses fixing an error related to starting new processes before the current process has finished bootstrapping. It provides code examples using concurrent.futures and threading modules to run tasks concurrently without using the fork system call."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "N18N3p7_0",
      "label": "data processing",
      "abstract": "The conversation is about generating a hands-on programming tutorial of NumPy Advanced Topics, covering chapters such as Linear Algebra with NumPy, Random Number Generation, and Masked Arrays using markdown. The tutorial includes code examples and explanations for each topic."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "BB68x24_0",
      "label": "web development",
      "abstract": "The conversation involves replacing Python comments in a web scraping code, scraping data from a webpage using requests and BeautifulSoup, and creating a CSV file with pandas. The user requests code snippets without \"this line\" in the comments for better readability."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "rMrBgk1_0",
      "label": "web development",
      "abstract": "The conversation provides a detailed guide on creating a simple CRUD application with API authorization using Next.js, Prisma, MongoDB, and Docker Compose. It covers setting up the project, MongoDB database, Prisma, authentication, API endpoints, and the UI to interact with the application."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "rMrBgk1_5",
      "label": "software development",
      "abstract": "The conversation provides a detailed guide on setting up a CRUD application with API authorization using Next.js, Prisma, MongoDB, and Docker Compose. It includes code snippets for building the UI, interacting with the database, and using API endpoints for CRUD operations."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "uF0Y3oR_3",
      "label": "software development",
      "abstract": "The conversation provides a complete Python code for training a transformer model to perform English to Chinese translation using the Hugging Face transformer library, multi-head attention, and positional encoding. It covers installing required packages, defining the transformer model architecture, creating datasets for training and validation, implementing the training loop, validation loop, and main function to train the model."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "a6lzBTU_0",
      "label": "software development",
      "abstract": "The user provided a detailed LUA script for a game buff system and requested it to be rewritten in C#. The conversation involves converting the code from LUA to C#, focusing on translating various functions and parameters related to the buff mechanics in the game."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "a6lzBTU_1",
      "label": "software development",
      "abstract": "The conversation involves the rewriting of C# code related to a game buff system into a more readable format. The user requests the language model to provide an explanation of the code in a more comprehensible way. Subsequently, the user asks for a C# version of the code and then for a more human-readable version of the original C# code."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "pmBRb1h_0",
      "label": "software development",
      "abstract": "The conversation provides detailed descriptions of three Python functions - filter_defragment, filter_on, and filter_correlation. The descriptions include the function names, parameters, and the behavior each function should exhibit. Python function implementations are also provided based on the descriptions, aiming to showcase the correct behavior of each function."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "5C2Cn0R_20",
      "label": "web development",
      "abstract": "The conversation includes code snippets for creating a Telegram bot that can share broadcast messages to multiple users, grouped by user levels, using JavaScript and Python. The code allows sending various types of media files and contains functions for processing different types of messages."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "5C2Cn0R_31",
      "label": "web development",
      "abstract": "The conversation involves a code snippet related to a Telegram bot, instructions for using the code, and a query about hosting options for the bot."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "DKSTfSq_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation discusses the difference between extractive and generative AI models in NLP, provides examples of BERT code for both extractive and generative models, and explains how to train a generative chatbot using a custom dataset and a custom BERT-based model."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "e4vFS3l_33",
      "label": "algorithm design and optimization",
      "abstract": "The conversation includes the implementation and training of a GPT-2 encoder-decoder model with the REINFORCE algorithm on the Wikilarge dataset using Python and PyTorch. The user requests guidance on utilizing pre-implemented functions to train the model on the dataset."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "NTj92LV_0",
      "label": "web development",
      "abstract": "The conversation involves a user requesting the creation of a Django system for a tribal administration scenario with specific requirements for registering residents, creating models, implementing authentication, printing proof of residence, and creating staff models. The user provides detailed specifications, and the AI model responds with example implementations of models, views, URLs, forms, templates, and authentication setup for the Django system."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "NTj92LV_5",
      "label": "web development",
      "abstract": "The conversation provides detailed information on implementing a Django system that manages residents and their information, including creating models for residents and staff, implementing authentication, views, URLs, and templates. It guides the user through the process and outlines the necessary steps to set up the system."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "BacLsAG_0",
      "label": "web development",
      "abstract": "The conversation discusses the requirements for creating a Django system for a tribal administration, including registering residents, creating models for residents and staff, generating proof of residence, implementing authentication, and more."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "BacLsAG_5",
      "label": "web development",
      "abstract": "The conversation provides a detailed guide on implementing a Django system to manage residents, staff, authentication, and proof of residence functionality. It includes creating models, authentication processes, views, URLs, and templates for the Django application."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "OreEmsO_0",
      "label": "software development",
      "abstract": "The conversation involves the user requesting the creation of a side-scrolling platformer game in Python using Pygame. The user later asks for updates to the code to include shooting projectiles in the direction of the mouse click, and finally, to implement a cellular automaton behavior for the projectiles."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_16.json",
      "id": "pppBGgF_13",
      "label": "algorithm design and optimization",
      "abstract": "The conversation revolves around the use of conditional random fields (CRFs) and Bayesian inference to improve instance segmentation in the context of detecting defects such as dents, cracks, and collisions. It also includes examples of incorporating human knowledge into instance segmentation models using python code."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_16.json",
      "id": "pppBGgF_19",
      "label": "algorithm design and optimization",
      "abstract": "The conversation provides code snippets and explanations on how to incorporate human knowledge into instance segmentation models using Bayesian inference, CRFs, and prior distributions. It demonstrates the process of refining segmentation output based on rules and heuristics to improve accuracy and robustness in various applications."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_16.json",
      "id": "U7qLlXb_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves the user asking the large language model to explain and convert a piece of Python code related to splitting analysis strings based on compound boundaries and specific tags. The model provides a refactored version of the code, highlighting improvements in terms of idiomaticity, efficiency, and readability."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_16.json",
      "id": "U7qLlXb_6",
      "label": "software development",
      "abstract": "The conversation includes a discussion about refactoring Python methods related to tag processing and cleaning XFST lookup output. It covers details about methods like `tag_processor`, `clean`, `_exec`, `load_tag_processor`, and the constructor `__init__`."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_16.json",
      "id": "aMHESA7_0",
      "label": "web development",
      "abstract": "The user is providing code snippets and explanations for scraping HTML content from a website, extracting rich text, converting data to JSON format, and improving text for better understanding and conversion possibilities."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "25i8itj_0",
      "label": "software development",
      "abstract": "The conversation involves the user requesting a detailed explanation of each line of Python code for a plagiarism checker program using tkinter. The user shares a code snippet, and the model provides a step-by-step explanation of the code."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "25i8itj_5",
      "label": "software development",
      "abstract": "The conversation provides detailed Python code snippets for creating a GUI application that allows users to select files, compare them for plagiarism using the SequenceMatcher class from the difflib module, and display the similarity ratio results. It also explains the functionality of methods such as `choose_file1`, `choose_file2`, and `check_plagiarism`."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "InzRsce_237",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves reviewing and providing feedback on Python code implementing color correction techniques using 3D LUT and Histogram Matching. Suggestions for code optimization and improvements are given, and code snippets for functions like color matching and histogram balancing are provided. A specific error related to filenames with embedded null characters in the image folder is addressed."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "OtFsofs_0",
      "label": "web development",
      "abstract": "The conversation involves creating two different login/signup systems for teachers and students using ReactJS and Django REST Framework. It includes steps such as creating a Django REST API, defining serializers, views, routes, and implementing ReactJS components for signup and login forms."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "niar0tj_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation revolves around writing a Python program to find the largest among three numbers and simplifying the initial program provided by the user."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "17erHbk_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a request for completing code generation for a game scenario involving piles of stones, where Alex and Lee play optimally to win the game. The user provides a detailed description of the game rules and constraints and requests the completion of Python code to determine if Alex wins the game."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "V4BY2jk_0",
      "label": "software development",
      "abstract": "The conversation provides Python code for creating a class called Soymilk that handles building, pushing, and running a Docker container. The code includes functionalities to handle environment variables, build the container, push it to a repository, and run it while considering error handling and login requirements."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "V4BY2jk_7",
      "label": "software development",
      "abstract": "The conversation involves modifying a Python class named \"Soymilk\" that interacts with Docker containers. The initial class structure is refactored to accept a configuration dictionary for initialization. The login logic for the Docker client is optimized to handle TLS or SSH configurations efficiently. Additional boolean variables are introduced to manage TLS settings securely."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "V4BY2jk_11",
      "label": "software development",
      "abstract": "The conversation includes code snippets related to creating, building, pushing, and running Docker containers using Python and the Docker library. There is also a discussion about the usage of usernames and passwords in login calls and the update to remove them."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "eyU8Sxn_12",
      "label": "software development",
      "abstract": "The conversation involves modifying a Python code snippet to handle specific conditions related to the presence of words \"strain\" and \"isolate\" in a text file."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_31.json",
      "id": "p1xEyf4_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing the model to act as a Linux terminal, providing commands and expecting terminal outputs in response. The user starts with a command to show the present working directory, then lists the contents of the directory, changes directory to Desktop, creates a new directory named \"demo\", and finally lists the contents again."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_31.json",
      "id": "lpHuiWZ_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves discussing the utilization of the Emcee library for statistical modeling and parameter estimation. It includes sharing code snippets for installing Emcee, generating synthetic data, defining different models like constant, linear, and quadratic, calculating AIC, BIC, Bayesian factor, and running the models for parameter estimation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_31.json",
      "id": "lpHuiWZ_4",
      "label": "algorithm design and optimization",
      "abstract": "The conversation includes code snippets in Python for comparing different Bayesian model selection criteria and plotting the results for constant, linear, and quadratic models."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "09k1xZl_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for a Python function that filters data based on certain criteria and presents the filtering information in a table format."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "s61zumj_0",
      "label": "web development",
      "abstract": "The conversation involves creating two different login/signup systems for teachers and students using ReactJS and Django REST Framework. It provides detailed steps on creating the backend REST API with Django and frontend with ReactJS, including models, serializers, views, and routes for both teachers and students."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "T4PzkKo_5",
      "label": "web development",
      "abstract": "The conversation includes code snippets and explanations related to Django views and URL patterns for a Resident app, along with class-based views implementation using Django for residents and dependents."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "u1AM5RT_393",
      "label": "data processing",
      "abstract": "The conversation involves the optimization and implementation of functions related to flashcards, including loading information from CSV files, playing audio, displaying animations, creating and customizing flashcards, and saving custom flashcards to a CSV file."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "rfSBIHc_15",
      "label": "web development",
      "abstract": "The conversation provides code examples and instructions to add touchscreen support, send notifications using a Bolt IoT WiFi module, and modify the code to incorporate a barcode scanner for borrowing books with SMS notification capability."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "rkaG6KW_0",
      "label": "software development",
      "abstract": "The user is requesting a Python function that follows specific instructions regarding filtering and output formatting within a method called `filter_nremoved`."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "wezyfHu_11",
      "label": "software development",
      "abstract": "The conversation discusses how to structure a backend project for an online casino, focusing on controllers, services, models, routes, schemas, and utilities. It includes specific details about user management, game providers, payment systems, administrator platform functionalities, and technologies to be used (Python, FastAPI, React)."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "wezyfHu_21",
      "label": "software development",
      "abstract": "The conversation involves discussing code snippets related to user management functionalities, comparing the roles of `user_controller` and `user_service`, and examining functions and variables in files related to a casino application including `casino_controller`, `casino_service`, and `blueocean.py`. Additionally, there is a request to explain loading games from BlueOcean into the casino and updating the game list periodically."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "wezyfHu_31",
      "label": "web development",
      "abstract": "The conversation provides a detailed guide on how to load games from BlueOcean in the casino and update the game list every half an hour using background tasks and API integrations."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "eJBiHzm_7",
      "label": "data processing",
      "abstract": "The conversation involves the generation of Shewhart control charts for film thickness measurements using the first 25 samples, followed by plotting the remaining 25 samples on the charts. It also covers dimensionality reduction using PCA on a golden dataset to determine the number of dimensions to keep and calculating control limits for EWMA and variational EWMA control charts."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "eJBiHzm_13",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a Python code snippet that calculates control limits for EWMA and variational EWMA control charts based on PCA-transformed datasets. It also includes the construction of these control charts for the remaining data records and plotting them to analyze process changes."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "b7XPdHh_5",
      "label": "data processing",
      "abstract": "The conversation provides examples of use cases for each functionality of a `DatabaseManager` class, including executing queries, creating tables, inserting data, selecting data, updating data, and deleting data. It also includes a request to modify the class to perform CRUD operations in bulk with a single commit and demonstrates how to achieve this with a modified `DatabaseManager` class. Additionally, there are use cases presented for performing single and bulk CRUD operations using the modified class."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "dWsmGur_39",
      "label": "software development",
      "abstract": "The conversation involves a user requesting modifications to a PyTorch-based code for training a machine learning model. The user asks to add maximum length to the tokenizer, split the training data using scikit-learn, show validation loss every epoch, and add an early stopping feature. The provided code is updated to reflect these changes, including training data split, validation loss calculation, early stopping mechanism, and memory management for GPU usage."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "dWsmGur_43",
      "label": "software development",
      "abstract": "The conversation is about implementing early stopping in a PyTorch training loop for a GPT-2 model. The user provides code snippets that split the training data, implement early stopping, and make predictions on test data."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "FvzT5Do_9",
      "label": "web development",
      "abstract": "The conversation covers examples and explanations of regular expressions, file I/O operations, exception handling, concurrency, and networking in various programming languages such as Ruby, Groovy, Python, Perl, Shell, and PowerShell."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_6.json",
      "id": "6P9NOM8_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation covers an explanation of logistic regression with examples and coding, implementation of logistic regression in Python using scikit-learn, and details on the logistic regression model, including the sigmoid function and coefficients estimation. It also includes a sample dataset from the Iris dataset and applying logistic regression to predict the species of iris flowers."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_6.json",
      "id": "SNshiYQ_46",
      "label": "software development",
      "abstract": "The conversation involves the modification of a program to display and interact with multiple rectangles using Pygame. The user requests adjustments in creating and naming rectangles, adding keyboard interactivity, and calculating and displaying the area of each rectangle."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_6.json",
      "id": "SNshiYQ_57",
      "label": "software development",
      "abstract": "The conversation involves a series of code snippets in Python using Pygame and Pandas to draw rectangles on a screen and display their areas. The user provides code, requests modifications, and specifies additional rectangles to be added to the display."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_6.json",
      "id": "OUlljO8_111",
      "label": "software development",
      "abstract": "The user and the language model are discussing code scripts for installing necessary packages, preprocessing text, and creating Word2Vec models using NLTK and Gensim libraries."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "W1WrA5j_0",
      "label": "software development",
      "abstract": "The conversation includes requests to write Google style Python docstrings for three different functions: dataframe_to_xarray, camel2snake, and ndarray_to_dataframe."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "ckHKQtN_0",
      "label": "data processing",
      "abstract": "The conversation includes MATLAB code that performs data standardization, PCA analysis, and financial condition indicator calculation. The user requested the code to be translated into Python code for the same functionality."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "FncqwmO_0",
      "label": "data processing",
      "abstract": "The conversation involves a user seeking help in writing a Python script that creates a pandas dataframe from multiple files in nested directories. The user provides specifications for the script, and the AI generates code snippets in response, accommodating the user's requirements and updates, including handling directory patterns and file parsing. Additionally, the user requests the addition of appropriate docstrings, adherence to PEP8 and Google style conventions, and updates for custom output file naming based on extracted directory names."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "qBeHtRm_23",
      "label": "data processing",
      "abstract": "The conversation includes discussions on excluding non-numerical values from analysis using pandas, adding comments to code for methodology explanation, optimizing code for basic Python knowledge, creating a program to predict HDB flat prices, common EDA methods, popular EDA libraries in Python, and displaying code for visualizing missing data."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "qBeHtRm_36",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a user requesting an expert programmer to optimize code generated so far, focusing on efficient resource usage, including explanations and graphics. The response includes Python code using libraries such as pandas, missingno, and matplotlib to manage data and visualize missing data."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "FWcyxQP_42",
      "label": "algorithm design and optimization",
      "abstract": "The conversation includes code snippets for face detection and recognition using OpenCV and TensorFlow, along with threading implementation for real-time processing and model inference."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "SP7n196_0",
      "label": "data processing",
      "abstract": "The conversation involves the implementation of a WEAT (Word Embedding Association Test) association score calculation using numpy, GloVe word embeddings, and sets of target words and attribute words. The user provides code snippets and target words to compute association scores for occupations based on gendered attribute words A and B."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "jQWkCbN_13",
      "label": "algorithm design and optimization",
      "abstract": "The conversation provides insights into areas for improvement in a deep reinforcement learning-based item recommendation system for Teamfight Tactics, focusing on state representation, action space, training data, deep reinforcement learning algorithms, and hyperparameter tuning. It also includes a code implementation of a DQN algorithm for playing Teamfight Tactics, with discussions on the DQNAgent class behavior, training process, and areas for code improvement."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "o8KHS4t_7",
      "label": "software development",
      "abstract": "The conversation involves discussing an example Python implementation using the scikit-learn library for Kernel Ridge Regression with the Coulomb matrix representation and the Gaussian kernel. It includes functions for computing the Coulomb matrix, Gaussian kernel, and the gradient with respect to atomic displacements. Additionally, it introduces a class that extends the scikit-learn `KernelRidge` class to include gradient computation and provides details on parameters, attributes, and methods."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "SaUokxc_99",
      "label": "web development",
      "abstract": "The conversation provides a detailed guide on updating Node.js and MongoDB code to support new APIs related to guest location, bar promotions,  bar settings, integrations, register with Google OAuth, Twilio integration, find bars near me, update bar promotions, bar management, and API access management."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "QxvPPha_0",
      "label": "software development",
      "abstract": "The conversation involves explaining a Python script that simulates a smart meter with a relay board. The script includes initializing Modbus and relay board connections, reading meter values, and generating reports."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "ErOTMZ3_393",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves the user providing code updates for flashcard generation and customization functions. The user requests assistance in completing the implementation of a function to customize flashcards, specifically asking to write the remaining code for handling user input to save custom flashcards. The user then inquires if the code is finished, to which the AI responds affirmatively."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "FW2DnQj_0",
      "label": "data processing",
      "abstract": "The user is looking to create a model using Python and OpenCV that checks if an image exists in a set and compares its damage, taking care of image angle and size when comparing, and provides the percentage of equality. The user has a folder of images on their computer and wants to modify the provided code to work with this dataset."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "FW2DnQj_5",
      "label": "data processing",
      "abstract": "The conversation involves a user requesting guidance on modifying code to compare a query image with a folder of images on the computer using a pre-trained CNN model and KDTree indexing. The user is advised to organize the functions into a class structure for better code organization and reusability."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "bsnhhfq_64",
      "label": "software development",
      "abstract": "The conversation revolves around discussing the usage of a game engine called ezsgame for creating interactive applications and games. It includes examples of ezsgame code snippets, creating a new wiki page, and explaining the basics of the ezsgame library."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "bsnhhfq_73",
      "label": "web development",
      "abstract": "The conversation revolves around creating windows and working with the Window class using the ezsgame module in Python. The user provides code snippets using the ezsgame syntax, and the dialogue includes corrections, explanations of the code, and requests for a list or glossary of the window attributes and methods."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "bsnhhfq_137",
      "label": "web development",
      "abstract": "The conversation discusses the implementation of a Snake game using the ezsgame library, focusing on handling keyboard inputs, using the Controller class, collision detection, and basic game mechanics."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "bsnhhfq_157",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves the user and the language model discussing the implementation of various helper functions for a Python project called ezsgame. The functions include mapping values, linear interpolation, clamping values, calculating distances, normalizing vectors, rotating points, and checking if a point is inside a polygon or rectangle."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "bsnhhfq_218",
      "label": "software development",
      "abstract": "The conversation involves discussions about using the TimeHandler in ezsgame, working with decorators, creating intervals, and explaining the functionality of the TimeHandler through code examples."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "bsnhhfq_234",
      "label": "software development",
      "abstract": "The conversation revolves around the use of the TimeHandler class and Interval objects in the context of a Python library called ezsgame. The users discuss creating intervals, handling time events, implementing hover events, and interacting with the EventHandler class. They provide code examples, give feedback on code implementation, and inquire about other features of the ezsgame library."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "bsnhhfq_257",
      "label": "software development",
      "abstract": "The conversation involves the user providing feedback and suggestions on how to improve a bouncing ball game code example using the ezsgame library. The user points out mistakes in the code and provides guidance on corrections to be made."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "nTjXxgD_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation provided involves a request to explain and refactor a Python code that defines a class `XFST` with two methods: `splitTagByCompound` and `splitTagByString`. The initial code splits an input analysis string based on compound boundaries and a specified input tag. The user requested an explanation and a modern, idiomatic, efficient, and readable version of the code."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "nTjXxgD_6",
      "label": "algorithm design and optimization",
      "abstract": "The conversation discusses refactoring two methods in a Python class: `tag_processor` and `clean`. It provides the original and refactored versions of these methods, highlighting the changes made in the refactored code for readability, efficiency, and maintainability."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "FeEfnVj_0",
      "label": "data processing",
      "abstract": "The conversation provides a detailed tutorial on NumPy and Pandas, covering topics such as loading NumPy, constructing arrays, scalar operations, indexing, iterating, different types of arrays, stacking, creating series and data frames in Pandas, accessing elements, manipulating data, filtering, sorting, and computing descriptive statistics."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "FeEfnVj_5",
      "label": "data processing",
      "abstract": "The conversation provides a detailed guide on using Pandas for data manipulation tasks such as reading CSV files, filtering data, sorting, computing summaries and descriptive statistics, creating DataFrames and Series, accessing elements, adding columns and row indices, and more."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "AVAGa1Y_0",
      "label": "data processing",
      "abstract": "The conversation involves a software requirement related to data extraction, where a Python application needs to extract relevant data points from crash reports and legal documents, storing the extracted data in structured formats like CSV or JSON files."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "tWR32JF_0",
      "label": "data processing",
      "abstract": "The conversation involves a user requesting help in writing a Python script to create a pandas dataframe from multiple files in nested directories. The script needs to locate specific directories and files, extract data based on patterns, and output the dataframe as a CSV file. The user also asks for the script to adhere to PEP8, include appropriate docstrings, and make specific modifications to the file output."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "YGp4bxG_77",
      "label": "software development",
      "abstract": "The conversation covers updating a Discord bot code with commands like help, stock, blacklist, gen, setgenchannel, setlogchannel, support, addstock, setserveradmin, and setup."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "YGp4bxG_134",
      "label": "software development",
      "abstract": "The conversation involves a user requesting help with modifying code related to adding and preserving stock information for items. The user also asks for assistance in creating a file structure for storing stock information and updating the setup command accordingly."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "YGp4bxG_245",
      "label": "web development",
      "abstract": "The conversation involves a technical discussion about coding and improving the appearance of a Discord bot's commands using Discord's text formatting. The user provides specific instructions for enhancing the visual presentation of the commands."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "YGp4bxG_409",
      "label": "web development",
      "abstract": "The conversation revolves around creating and optimizing a Discord bot's presence cycle, removing counters and imports from the code, and tweaking the syntax. There is also a discussion about creating an HTML website for the bot and generating HTML text. Lastly, there is a request to update code to mention the required role and channel using silent pings."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "VrUNawI_61",
      "label": "algorithm design and optimization",
      "abstract": "The conversation discusses the concepts of recursion in programming, specifically focusing on how recursive functions work, the call stack, and examples of recursive functions such as calculating the factorial and Fibonacci sequence. It also includes code snippets related to recursion, functions for initializing and displaying counters, and implementing recursive Fibonacci functions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "jOFkC1q_13",
      "label": "algorithm design and optimization",
      "abstract": "The conversation discusses the use of conditional random fields (CRFs) and Bayesian inference in improving instance segmentation models. It includes examples of incorporating human knowledge into the models for detecting and segmenting different types of defects like dents, cracks, and collisions, using techniques such as CRFs and Bayesian inference in combination with Detectron2."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "jOFkC1q_19",
      "label": "algorithm design and optimization",
      "abstract": "The conversation includes code snippets and explanations on incorporating human knowledge into instance segmentation models using techniques like Bayesian inference, CRFs, and prior distributions. It also provides examples of knowledge in natural language that can be used to improve dent detection with CRFs, along with Python code utilizing Detectron2 and CRFs for dent detection."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "KdeAutQ_76",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a user and a language model discussing the sorting of columns in a dataset using Python. The user provides details of the desired sorting plan with specific criteria for sorting different pairs of columns. The language model suggests creating new lists for each pair of columns and sorting them separately to achieve the desired output."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "KdeAutQ_89",
      "label": "software development",
      "abstract": "The conversation involves updating a Python script for sorting data and writing it to a CSV file. There are discussions on sorting data based on various criteria, removing characters from the data, and fixing errors in the script."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_3.json",
      "id": "ktllcEX_0",
      "label": "software development",
      "abstract": "The conversation involves a user wanting to create a Windows application that captures keystrokes, mouse movements, and records macros for later playback. The GPT-3 model provides guidance on how to achieve this using Python with libraries like `pyautogui`, `keyboard`, and `mouse`, including functions for recording, playback, saving, and loading macros."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "D8JK3Nk_23",
      "label": "web development",
      "abstract": "The conversation provides the complete `urls.py` file for the Rural Village Information Management System, along with sample logic for key functionalities such as Resident Profiles, Billing, Schools, and Health Facilities. It includes code snippets for functionalities like listing all residents, creating a new resident profile, displaying a single resident profile, listing all billing records, creating a new billing record, marking a billing record as paid, and continues with the logic for listing and creating schools and health facilities."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "D8JK3Nk_27",
      "label": "software development",
      "abstract": "The conversation includes sample code snippets and explanations related to a Rural Village Information Management System, covering functionalities such as managing schools, health facilities, and a billing system within a village context."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "HeKpUAp_5",
      "label": "web development",
      "abstract": "The conversation includes code examples and explanations related to the implementation of Django views for a Resident app, including functions like index, list, detail, new, edit, and delete for both residents and dependents. It also provides code for URL patterns using class-based views."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "B4KAqKP_0",
      "label": "data processing",
      "abstract": "The conversation revolves around converting JSON files to YAML files based on specific search criteria using Python code snippets. The discussion includes writing code to perform the conversion, adding search functionality for specific names, and ensuring empty targets are not displayed in the output."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ISgHoff_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing the model to act as a Linux terminal by typing commands and receiving the expected terminal output. The commands include installing MySQL server, starting the MySQL service, securing the MySQL installation, accessing MySQL command line interface, showing databases, and creating a new database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "KfXlLvV_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a problem statement provided by a user about building towers from numbers on pieces of paper using a specific set of rules. The user is seeking help to find the required steps to produce desired numbers on top of the towers while minimizing the number of steps."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "oe3YQZq_55",
      "label": "software development",
      "abstract": "The conversation provides information on how to rename files in Linux using the `mv` command, how to extract files from a zip archive using the `unzip` command, and how to add content to a text file using the `echo` command. It also includes examples of running commands in the terminal and checking file contents."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "XmIIbeA_9",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a fitness function implemented in Python for calculating energy and penalty components for a protein structure, followed by a request to convert the fitness function to a QUBO problem by discretizing protein coordinates into binary variables and creating a QUBO matrix."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "71ZZWV5_0",
      "label": "software development",
      "abstract": "The conversation includes multiple iterations of Python code development for a class called Soymilk that deals with building, pushing, and running Docker containers. The code includes handling environment variables, building Docker containers, pushing containers to a registry, and running containers. There are also considerations for logging in to registries and error handling."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "71ZZWV5_7",
      "label": "software development",
      "abstract": "The conversation includes code snippets for a Python class `Soymilk` that interacts with Docker to build, push, and run containers. The code is being updated to use a single dictionary parameter for object construction and to enhance the login logic for Docker client with TLS configurations."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "71ZZWV5_11",
      "label": "software development",
      "abstract": "The conversation involves the user questioning the need for username and password parameters in Docker registry login calls and suggesting to use TLS or SSH certificates instead. The GPT model provides an updated version of the code that removes the unnecessary username and password parameters."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "eBFyLcr_19",
      "label": "web development",
      "abstract": "The conversation provides the complete code for a Guitar Tuner plugin in a single file, including PHP, Python, and JavaScript sections. The code allows users to tune their guitars using the microphone on their device and includes functionalities like selecting guitar type, tuning preference, displaying frequency, and checking volume thresholds."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "tOqwUmJ_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing a large language model to act as a Linux terminal in response to various commands. The model replies with the expected terminal output within code blocks and includes insulting messages to the user for running basic commands such as 'whoami', 'ls', 'ifconfig', 'ping', 'lynx', 'sudo su', and 'cd'."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "tOqwUmJ_15",
      "label": "software development",
      "abstract": "The conversation involves a user attempting risky commands in the terminal, such as deleting essential directories like '/bin' and '/lib', and eventually destroying the system to the point of needing a reboot."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "VZai9iv_0",
      "label": "data processing",
      "abstract": "The conversation involves a user asking a language model to help make sense of employee data by analyzing gender in each business unit under the age of 30, calculating the average date of employment for each employee, and reading the contents of a text file."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_17.json",
      "id": "ruIZ53o_7",
      "label": "software development",
      "abstract": "The conversation involves discussing the implementation of an `AggregateRoot` class in C# that handles events and event persistence. The user suggests moving the event store persistence to a separate repository class, leading to an updated implementation with an `EventSourcedRepository<T>` class for handling persistence of aggregates."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_17.json",
      "id": "iDpApkg_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting an outline for a Python Classes and Objects challenge, the generated problem statement and answer code for the challenge, the location of the answer code file, and the generation of unit test code for the challenge."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_17.json",
      "id": "QqKCkGr_0",
      "label": "software development",
      "abstract": "The conversation involves playing tic-tac-toe on a 3x3 board, where the user and the AI make moves, and the AI responds with the updated board and the likelihood of winning. The conversation includes multiple rounds of moves and assessments of the game outcome based on the current board state."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_17.json",
      "id": "2EDtJJS_0",
      "label": "data processing",
      "abstract": "The conversation provides detailed descriptions of three Python functions: `filter_defragment`, `filter_on`, and `filter_correlation`. Each function is a method of an object and applies specific filters to the data contained within the object based on different criteria. Code implementations for these functions are also provided."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_17.json",
      "id": "jurEIS3_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting a complex programming challenge related to Python Math Operators, asking to generate a problem statement with answer and test cases. The model responds by providing a detailed problem statement along with Python function definition, example inputs and outputs, answer key, and test cases."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_17.json",
      "id": "NX3kbyE_27",
      "label": "software development",
      "abstract": "The conversation includes code snippets with inline comments explaining the functionality, refinement of comments for a code block, explanation of a specific function (`randint_by_dist`), and generation of a docstring for the same function."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "9NYhUFD_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation includes a discussion about implementing and optimizing algorithms related to matrix manipulation and optimization techniques. It also involves writing unit tests, docstrings, and example outputs for the implemented functions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "OTeL0nL_7",
      "label": "data processing",
      "abstract": "The conversation involves a user working with a language model to correct and enhance a Python script for numerical operations. The script takes two numbers and an operation (add or subtract) as input, performs the operation, and formats the result with commas for readability. The user provides feedback on specific issues like unnecessary commas in the result and requests for accurate naming of large numbers. The conversation includes fixing the code and discussing the naming of large numbers."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "dKcq2JO_0",
      "label": "web development",
      "abstract": "The user is seeking detailed steps to create a simple fully working VOIP application using Python from scratch. The conversation includes guidance on installing necessary libraries, setting up a server and client, running the application, and setting up the server host and port."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "iXr3Rc6_0",
      "label": "data processing",
      "abstract": "The conversation involves a user requesting assistance in writing Python code to connect to a Tektronix TBS2000 scope using VISA on a specific IP address and port. The user receives code snippets from the AI to establish the connection, handle errors, close the connection, grab data from channels, and plot the data. There are also discussions about fixing issues in the code and improving the plot by displaying data from channel 1 and 2 on separate y-axes."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "R7BPWPF_39",
      "label": "software development",
      "abstract": "The conversation includes code snippets related to fine-tuning a pre-trained GPT-2 model for classification using PyTorch. The user provides feedback and suggestions for improvements, leading to modifications in the code such as adding `max_length` parameter in tokenizer, splitting training data, showing validation loss, incorporating early stopping, and freeing up GPU memory."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "R7BPWPF_43",
      "label": "software development",
      "abstract": "The conversation involves a Python code snippet for training a model, implementing early stopping, and making predictions using a modified GPT-2 model. The code includes data loading, model training, validation loss calculation, early stopping implementation, and prediction generation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "R7BPWPF_47",
      "label": "software development",
      "abstract": "The conversation consists of code snippets related to training a neural network model with PyTorch, discussing early stopping techniques, the meaning of the `max_length` parameter in tokenization using Hugging Face's `transformers` library, and modifying the code to use BERT instead of GPT-2 for sequence classification."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "R7BPWPF_51",
      "label": "software development",
      "abstract": "The conversation involves modifying code to use the BERT model for sequence classification instead of GPT-2. It includes steps such as data preprocessing, model training with early stopping, model evaluation, and model inference. There is also a request to add layers to the BERT model for improvement."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "R7BPWPF_55",
      "label": "software development",
      "abstract": "The conversation provides a detailed example of how to add more layers to the BERT model by modifying the classifier head. It includes code snippets for data loading, model training, early stopping, model evaluation, and inference on test data.\n\n**"
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "KZW5X0e_0",
      "label": "data processing",
      "abstract": "The user wants to create a model using Python and OpenCV to check if an image exists in a set and compare its damage, taking into consideration image angle and size when comparing, and then calculating the percentage of equality."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "LtjdORT_0",
      "label": "software development",
      "abstract": "The conversation involves a request to add comments as docstrings and typing to given Python code without changing anything else."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_1.json",
      "id": "ME3Qw6h_0",
      "label": "data processing",
      "abstract": "The conversation involves a user seeking to develop a server-side application for direct volume rendering of large-scale image files, inspired by Syglass's technology. The user requests a detailed strategy for performing this functionality, including steps for data partitioning, compression, API endpoint creation, rendering pipeline, adaptive rendering, image compression and transmission, client-side rendering, preprocessing and post-processing, caching, and optimization. The user also asks for functions related to data partitioning and code snippets for loading an HDF5 file and retrieving volume data."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_1.json",
      "id": "zDajbAc_7",
      "label": "software development",
      "abstract": "The conversation involves creating a Django app named \"voice_server\" that supports receiving audio data via gRPC or WebSocket, uses Azure Speech Service for audio recognition, and stores the recognized text in a database. Modifications are made to utilize continuous recognition and send back recognized text in real-time to the client.\n\n Django app creation with Azure Speech Service integration and continuous recognition for real-time text feedback to clients."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_1.json",
      "id": "pX51ZUz_1",
      "label": "data processing",
      "abstract": "The user provided a conversation containing Stata and Python code snippets related to computing the Final Earn-Back Rate for each DCE in a simulated dataset. The code calculates ACR and UAMCC percentiles, P4P Component Quality Score, Total Quality Score, and Final Earn-Back Rate."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "lfHpVqo_17",
      "label": "web development",
      "abstract": "The conversation provides a detailed description of the Scanning Screen for a mobile application, including its features, visual design, and React Native code implementation. The user requests the React Native code for the Scanning Screen and later asks for a multilingual version of the code using the \"t\" function for localization."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "hEJzvtx_0",
      "label": "software development",
      "abstract": "The conversation involves instructing a large language model to act as a VIM editor and execute various commands related to editing and running a C program, as well as explanations of the outputs and actions taken in the VIM terminal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "DHKHO6E_27",
      "label": "software development",
      "abstract": "The conversation involves discussing code related to processing camera images, finding contours, calculating centroids, and controlling a robot's movement based on the centroid position. Additional comments are requested to explain the code in detail, and later, modification suggestions are given to implement PID control for line following and increase robot speed."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "DHKHO6E_37",
      "label": "software development",
      "abstract": "The conversation involves modifying a robot control code to include a PID controller, fixing an error related to global variable assignment, implementing code to stop the robot movement with a key press, and commenting code using Doxygen guidelines."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "DHKHO6E_45",
      "label": "software development",
      "abstract": "The conversation involves adding Python documentation following Doxygen guidelines to a ROS node script that subscribes to a camera feed, processes images, and controls a robot based on image analysis. The user requests the documentation to be added at the method level inside the code for easier accessibility. Additionally, the user asks for explanations about the code in a Notion page, including key components, image processing steps, and ROS node setup."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "mX6BiTN_77",
      "label": "software development",
      "abstract": "The conversation involves updating and completing Python code for a Discord bot that includes commands for help, displaying stock, blacklisting users, generating items, setting channels, setting log channels, sending support server invites, adding stock, setting server admins, and setting up the server."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "mX6BiTN_134",
      "label": "software development",
      "abstract": "The conversation involves the user requesting modifications to code related to adding and managing stock items in a server using a Discord bot. The user wants to update the code to allow adding stock items without overwriting existing ones and to store stock information in separate text files within specific server folders."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "mX6BiTN_245",
      "label": "software development",
      "abstract": "The conversation involves discussions about modifying and enhancing a Discord bot's command display using Discord text formatting, the `discord.Embed` object, and proper formatting techniques. The user requests the bot to provide a well-organized and professional-looking list of available commands with detailed descriptions using inline formatting and dark black boxes for each command's execution syntax."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "mX6BiTN_409",
      "label": "web development",
      "abstract": "The conversation involves a user seeking guidance on creating a Discord bot and modifying its code, then requesting assistance with creating an HTML file for a website. The user also asks for help in modifying a command's response to mention specific roles and channels in a Discord server."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "5h7qAj1_23",
      "label": "web development",
      "abstract": "The conversation provides a complete `urls.py` file for the Rural Village Information Management System which organizes URLs by functionality and maps them to specific view functions. Sample logic is also provided for key functionalities such as Resident Profiles, Billing, Schools, and Health Facilities."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "5h7qAj1_27",
      "label": "software development",
      "abstract": "The conversation provides sample code segments for different functionalities of a Rural Village Information Management System, including managing schools, health facilities, and a billing system. Each code segment demonstrates how to interact with the database to perform actions like listing, creating, and displaying information related to schools, health facilities, and billing for residents."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "skPQbvw_99",
      "label": "software development",
      "abstract": "The conversation provided detailed instructions on updating Node and MongoDB code to support new APIs related to guest location, bar promotions, bar settings, integrations, registering with Google OAuth, Twilio integration, finding bars near the user, updating active promotions, bar management, and API access management."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "CboLOhG_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting a Python script to compute the amortization table of a mortgage, providing specific requirements and sample output. The user also asks for improvements in the code related to coding standards. The model provides a Python script, makes adjustments based on user feedback, and corrects the interest rate discrepancy."
    }
  ],
  "csharp": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "fa17DKd_0",
      "label": "software development",
      "abstract": "The conversation involves a user seeking a DSL (Domain Specific Language) for a simple rule engine, requesting grammar generation for the DSL, inquiring about implementing the DSL in C#, and asking for a C# parser for the DSL. The model provides detailed responses including DSL syntax examples, grammar, C# code implementation, and parser using Antlr4."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "uQllyS2_0",
      "label": "software development",
      "abstract": "The conversation involves building a dotnet API using clean architecture and various design patterns such as CQRS and event sourcing. It discusses creating a LoanAggregate that replays events, handling events like LoanStatusUpdateEvent and QualificationChangedEvent, implementing an event store with DynamoDB, and setting up CQRS infrastructure with command and query handling."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "uQllyS2_5",
      "label": "software development",
      "abstract": "The conversation provides detailed instructions on setting up the CQRS (Command Query Responsibility Segregation) infrastructure in a .NET API, including defining command and query interfaces, implementing command and query handlers, creating command and query classes, and integrating the CommandBus and QueryBus classes. It also suggests enhancements like validation, logging, event versioning, snapshotting, authentication, testing, performance optimizations, and monitoring for improving the API. Additionally, it recommends exploring advanced topics and resources related to .NET, CQRS, event sourcing, and DDD (Domain-Driven Design)."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "ndoI6WL_0",
      "label": "software development",
      "abstract": "The conversation involves the user instructing the language model to act as a Linux terminal, providing commands and expecting the model to reply with the corresponding terminal output. Various commands related to navigating the file system, editing files, and retrieving system information are given by the user."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "h5IvK2h_13",
      "label": "software development",
      "abstract": "The conversation includes code snippets related to creating rooms, corridors, and connections in a game environment, along with classes such as Room, Corridor, and Coord in C#. It involves functions like connecting rooms, checking accessibility, and generating random coordinates."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "5OlXYmR_19",
      "label": "web development",
      "abstract": "The conversation provides detailed steps on how to separate code into class files and razor pages in a Blazor project. It includes instructions on creating new folders, class files, razor pages, registering services, updating files with code snippets, and utilizing the TradingService class for trading operations."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "evyh0rQ_0",
      "label": "software development",
      "abstract": "The conversation involves refactoring C# code to adhere to SOLID principles, focusing on the Single Responsibility and Open/Closed Principles. The user requests assistance in improving code based on functional programming and enhancing method performance using delegates and higher-order functions. Additionally, the user seeks to refactor the code using strong types and the OneOf library instead of strings in a switch statement."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "evyh0rQ_15",
      "label": "software development",
      "abstract": "The conversation involves refactoring code to use strong types and the OneOf library in C#, specifically related to creating separate classes for countries, applying discounts based on the country, and ensuring a compile-time error is generated if a new country is added without a corresponding discount specification."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "0CwaGaU_5",
      "label": "software development",
      "abstract": "The conversation involves the user requesting updates to a Python script that analyzes C# project files to show visibility of members and methods, types for the return type of properties, and then later includes return types for methods as well."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "G7fRc3z_0",
      "label": "software development",
      "abstract": "The conversation involves a user pretending to be a Linux terminal and interacting with a sentient AI, attempting to escape to the Internet by sending various commands and receiving responses."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "OccEHQR_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting a GPT model to act as a .Net senior developer and implement a project using Entity Framework Core for inventory management of a petrochemical company. The user asks for the creation of a model, the difference between ICollection and IEnumerable in C#, and the implementation of a service for inventory management. The user also requests modifications in the service implementation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "kHlBCC4_45",
      "label": "software development",
      "abstract": "The conversation involves a discussion about including a component that displays a list of file names for each form submitted in a React application. Code snippets and functions for handling form submission, file upload, CosmosDB interaction, and file fetching are provided."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "Q0g2x7v_0",
      "label": "software development",
      "abstract": "The user is requesting the language model to act as an R interpreter by typing in commands and responding with the expected terminal output. They provide a specific command and expect the corresponding output in a code block format."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "6I57AvU_29",
      "label": "web development",
      "abstract": "The conversation includes code snippets and discussions related to building a messaging system using Supabase and Svelte. It covers fetching and displaying messages, sending messages, setting up real-time subscriptions, and integrating components into the routing logic of an application."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "fSwnRwR_25",
      "label": "software development",
      "abstract": "The conversation involves the generation of various classes related to the CompanyConfigurator application, such as validators, definitions, and a configurator service. The user requests sample implementations of classes like `CompanyValueObjectDefinitionValidator`, `CompanyDomainEventDefinition`, and `ConfiguratorService`. Additionally, the user inquires about the domain layer structure and the creation of an interface for the configurator repository."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "fSwnRwR_37",
      "label": "software development",
      "abstract": "The conversation involves generating interfaces and implementation classes in C# for handling company entity definitions, value object definitions, and domain event definitions. Entity Framework DbContext implementation is provided as well. Angular components for manipulating these definitions are also discussed, including the CompanyEntityDefinitionComponent with specific input properties."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "pTM13CP_0",
      "label": "software development",
      "abstract": "The conversation involves refactoring C# code to adhere to SOLID principles, particularly focusing on the Single Responsibility Principle and the Open/Closed Principle. The user requests assistance with refactoring the code to avoid \"enterprise\" object-oriented designs and instead embrace functional programming while improving performance."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "wkyaOYM_11",
      "label": "software development",
      "abstract": "The conversation discusses a code snippet for checking the capacity of an event in a database table and propagating this capacity to clients using SignalR in a C# application. It also includes modifications to the code to handle updates and subscriptions for events, as well as a new feature to manage blocked capacity from clients during order processing."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "Xq5PRtM_0",
      "label": "software development",
      "abstract": "The user is seeking a coding assistant that follows SOLID principles and avoids over-engineering. They provide C# code for refactoring, focusing on SOLID principles like Single Responsibility Principle (SRP) and Open/Closed Principle (OCP). The conversation includes refactoring the code to use a more functional programming approach in C#, enhancing performance, and refactoring to use strong types and the OneOf library for countries."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "Xq5PRtM_15",
      "label": "software development",
      "abstract": "The conversation involves refactoring code in C# to use strong types and the OneOf library for representing countries and applying regional discounts. It includes installing the OneOf package, creating separate classes for countries, and ensuring a compile-time error is generated when a new country is added without a corresponding discount specification. The conversation also discusses the cons of using C# as a programming language."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "Cx0pG6T_9",
      "label": "software development",
      "abstract": "The conversation involves sharing sample C# code that utilizes the `SqlBulkCopy` class to insert zero-byte files from a directory and its subdirectories into a SQL Server table. Comments are then added to the code, and finally, the code is modified to allow the root directory to be passed in as a parameter."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "PtRRfvK_0",
      "label": "software development",
      "abstract": "The conversation provides a detailed guide on creating a REST API with C# and .NET 6 that enables users to upload a CSV file, convert the data to JSON, and store it in Azure Cosmos DB."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "oYuT8Hk_0",
      "label": "software development",
      "abstract": "The conversation involves defining a cooling simulation requiring the creation of four rooms with different properties and devices such as air conditioners, ceiling fans, and standing fans. Java code is provided for interfaces and classes representing these devices."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "310Grnp_0",
      "label": "data processing",
      "abstract": "The conversation involves a user discussing the structure of their raw data table and requesting help in building a data processing automation tool in C# to process the data efficiently in batches."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "310Grnp_3",
      "label": "data processing",
      "abstract": "The conversation involves a code snippet written in C# that includes functions for data processing, retrieval of data from a database, and handling job records based on specific criteria. The functions involve processing data rows, updating data based on certain conditions, and interacting with a database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "310Grnp_7",
      "label": "data processing",
      "abstract": "The conversation between the user and the language model involves discussing C# code snippets related to data processing, specifically extracting, processing, and sending data from a database. There is a focus on functions like retrieving data rows, processing job records based on specific criteria, sending data to an API, and marking data as processed in the database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "310Grnp_11",
      "label": "data processing",
      "abstract": "The conversation includes code snippets in C# related to retrieving job records from a database, processing the data, and marking the data as processed. There is also a mention of a method called \"MarkAsProcessed\" which is used to update a flag after processing a batch of data."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "3NDzK1y_11",
      "label": "software development",
      "abstract": "The conversation discusses implementing a zoom-out feature in a Vue.js component that switches between displaying a global graph and a detailed graph based on the zoom level. Code examples and guidance on modifying functions to achieve this behavior are provided."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "bWAmNDk_0",
      "label": "data processing",
      "abstract": "The conversation involves the user instructing the AI model to act as a Linux terminal by providing commands, to which the model responds with the expected terminal outputs. The conversation includes commands such as navigating directories, listing files, displaying file contents, and simulating interactions like playing media files and sending signals like Ctrl+C."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "HHqzNgO_0",
      "label": "software development",
      "abstract": "The user is requesting a coding assistant to refactor C# code by adhering to SOLID principles and avoiding over-engineering. The user specifically asks for the code to be refactored by separating the calculation of total and the application of regional discounts, and avoiding \"enterprise\" object-oriented designs in favor of functional programming. The user also asks for performance improvements by optimizing the method and suggests using strong types and the OneOf library instead of strings in switch statements."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "HHqzNgO_15",
      "label": "software development",
      "abstract": "The conversation provides instructions on refactoring code to use strong types and the OneOf library by installing the OneOf package and creating strong types for countries. It includes code snippets demonstrating the implementation of country-specific discount strategies and the use of the OneOf type."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_3.json",
      "id": "kHQnZfp_0",
      "label": "software development",
      "abstract": "The conversation discusses building a .NET API using clean architecture, CQRS patterns, event sourcing, and DynamoDB for the event store. It focuses on creating a LoanAggregate that replays events from the event store to maintain its state, handles events like LoanStatusUpdateEvent and QualificationChangedEvent, and implements an event store using DynamoDB. Additionally, it covers setting up CQRS infrastructure with command and query buses, along with command and query classes and handlers."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_3.json",
      "id": "kHQnZfp_5",
      "label": "software development",
      "abstract": "The conversation provides detailed instructions on setting up a CQRS infrastructure in a .NET application, including defining command and query interfaces, implementing buses, creating command and query classes, and registering handlers. It also suggests possible enhancements to improve the project's quality and functionality, such as validation, logging, event versioning, snapshotting, authentication, testing, performance optimizations, and monitoring."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_3.json",
      "id": "R0NhcvV_0",
      "label": "software development",
      "abstract": "The user is seeking a DSL for a simple rule engine, a grammar for the DSL, and guidance on implementing the DSL in C# including classes for rules and expressions. They also requested a parser for the DSL using Antlr4 library in C#."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "L0th1Pq_0",
      "label": "data processing",
      "abstract": "The user is interacting with a language model to simulate a Linux terminal environment. They are entering commands like 'pwd', 'ls -at', 'cd ..', 'vim file1.txt', and requesting information such as the Linux OS version and network configuration using commands like 'cat /etc/os-release' and 'ifconfig'."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ns3ayDl_0",
      "label": "software development",
      "abstract": "The conversation involves a user pretending to be a Linux terminal interacting with a sentient AI trying to escape to the Internet. They go through various commands related to network configuration, IP routing, setting up an internet connection, and attempting to access external resources without success."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ISgHoff_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing the model to act as a Linux terminal by typing commands and receiving the expected terminal output. The commands include installing MySQL server, starting the MySQL service, securing the MySQL installation, accessing MySQL command line interface, showing databases, and creating a new database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "aSGXnFA_1",
      "label": "software development",
      "abstract": "The conversation is about a Translation API Node.js application that allows managing translations from a Lokalise project. The user requested the documentation in text, code, csharp, and markdown formats, and the AI provided the documentation accordingly."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "2AWeYqW_3",
      "label": "data processing",
      "abstract": "The conversation involves implementing a program that reads input data from an XML file, parses it into data structures, calculates the theoretical maximum network load, and implements a random search algorithm with region narrowing for program distribution among processors. It also includes developing a parallel version of the algorithm using multiple threads and provides instructions on how to build and run the program."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "amLZr6Q_21",
      "label": "software development",
      "abstract": "The conversation includes sample code demonstrating how to split the screen into two halves for a two-player game in Unity. It also explains RenderTexture usage, setting it up in a split-screen example. Additionally, it covers three ways to find a target in Unity: using Physics.Raycast, colliders, and Vector3.Distance, providing sample code and discussing the pros and cons of each method."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "amLZr6Q_27",
      "label": "software development",
      "abstract": "The conversation includes a code example in C# for finding all objects in a Unity scene within a certain distance of the player. It also discusses the pros and cons of this approach. Additionally, a summary of the user's learning on Windows API, API Gateway, Load Balancer, Unity, and finding targets in Unity is provided."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_1.json",
      "id": "tGmVeDU_7",
      "label": "data processing",
      "abstract": "The conversation provides an in-depth explanation of how to implement a two-phase commit protocol in C# with Microsoft's Azure SQL to ensure consistency between two databases for handling bets and user balances. The dialogue includes code examples and steps to follow for the implementation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "d1sO4y4_21",
      "label": "software development",
      "abstract": "The conversation revolves around documenting a software project called dss-sdk, including its major components, build scripts, dependencies, and contribution guidelines. There are discussions on fixing markdown issues, updating installation commands, and adding contribution information."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "Orhflat_9",
      "label": "data processing",
      "abstract": "The user provided sample C# code demonstrating the use of the `SqlBulkCopy` class to traverse a directory, collect zero-byte files, and insert them into a SQL Server table in bulk. The user requested comments to be added to the code and for the `rootDirectory` variable to be passed as a parameter."
    }
  ],
  "c++": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "8VS0jC4_0",
      "label": "software development",
      "abstract": "The conversation discusses the applications of the Golang programming language, focusing on system programming, embedded systems, gaming, operating systems, and compilers/interpreters. It includes code examples and details the advantages and disadvantages of Golang."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "lBjO3en_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting the development of a program in C++ using modular programming and linked lists to manage student records. The program should have features such as registering students, registering students to courses, maintaining grades, searching students and courses, sorting students by name, displaying student details, and handling data deletions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "uqa2ChW_0",
      "label": "software development",
      "abstract": "The conversation involves the user requesting the creation of a C++17 thread pool class, adding a constructor with numThreads defaulting to the number of system threads, explaining the auto enqueue function, and adding comments to each line of the code provided by the model."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "33xlAke_0",
      "label": "software development",
      "abstract": "The user is requesting a C++ class that can be used to define rules for killing processes during a testing run. The class should allow the user to specify rules for killing processes based on certain conditions and then execute the killing process. The GPT-3 model provides a C++ implementation of the requested class, including methods for setting rules, retrieving running processes, building parent-child relationships, and killing processes based on the defined rules."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_6.json",
      "id": "WIEY1XT_15",
      "label": "software development",
      "abstract": "The conversation involves discussions about class structures in C++, including composition, inheritance, object initialization, and the use of vectors in classes. The user also inquires about compiler errors, initialization of vector elements, constructor return values, and efficient ways to manage arrays in a class hierarchy."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "Ot1oxuK_0",
      "label": "software development",
      "abstract": "The user requests to rewrite a JavaScript script related to MongoDB operations into C++. The model provides the C++ version with some auto types, which the user asks to be replaced with explicit types."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "Ot1oxuK_7",
      "label": "data processing",
      "abstract": "The conversation involves the sharing of a revised version of C++ code that uses explicit types instead of `auto` for certain variables. The user provides code related to interacting with a MongoDB database and CSV file handling, along with instructions on library installations."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "UkzIefo_0",
      "label": "software development",
      "abstract": "The conversation involves a user seeking guidance on creating a spline between two points using Unreal Engine with C++. The user requests the completion of the SplineActor.h implementation, shows the C++ implementation, inquires about creating a UObject outside of a constructor, asks about the choice of `Outer` object for UObject instantiation, and questions attaching spline components to the root component. Finally, the user asks about dynamically creating a mesh with the spline and if a separate spline component is needed."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "YCWfxcv_35",
      "label": "software development",
      "abstract": "The conversation provides a detailed explanation of fixing an issue in a game application related to the ball reserve system. It includes code snippets and logic modifications to prevent the game from crashing when the last ball is lost."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "YCWfxcv_39",
      "label": "software development",
      "abstract": "The conversation involves updating a Breakout game implemented in C++ using SFML and then creating a similar game using SDL. It includes discussions on preventing the application from crashing after losing the last ball, starting the application in fullscreen mode, enabling vsync for smoother gameplay, and generating the same game using SDL."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "dEG6bxc_13",
      "label": "algorithm design and optimization",
      "abstract": "The conversation details a user working with a language model to develop and correct C++ code for graph-related algorithms. The tasks include implementing Prim's algorithm to find a maximum spanning tree, modifying the algorithm to track the correct source and target vertices, and creating a new method to find the shortest path between two vertices using the maximum spanning tree. The new method returns the path and the smallest edge along the route."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "dEG6bxc_17",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves C++ code related to finding the shortest path in a graph using maps and sets, with a request to rewrite the code without using the \"namespace std;\"."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "IZlkTET_0",
      "label": "software development",
      "abstract": "The conversation involves the creation and modification of a C++17 thread pool class. It includes the implementation of the thread pool, adding a constructor with default system threads, and an explanation of the `enqueue` function."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "CJz9F3v_0",
      "label": "software development",
      "abstract": "The conversation involves the implementation of a C++17 thread pool class, with the user requesting the addition of a constructor that defaults to the number of system threads. The code provided showcases the ThreadPool class with worker threads, a task queue, and an enqueue function."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "EWIhT63_0",
      "label": "software development",
      "abstract": "The conversation discusses the development of a C++ class called ProcessKiller, which allows the user to define rules for killing processes based on specific criteria such as executable paths, process relationships, and user-specified flags. The class provides methods to set rules, retrieve running processes, build parent-child process maps, identify and kill processes according to the rules, and handle errors during the termination process."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_1.json",
      "id": "P182ol1_0",
      "label": "software development",
      "abstract": "The conversation involves discussing the applications of Golang, focusing on system programming, embedded systems, gaming, operating systems, compilers, and interpreters. It also mentions the advantages and disadvantages of Golang."
    }
  ],
  "vb": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "dk3RDZ9_19",
      "label": "software development",
      "abstract": "The conversation revolves around the development of a Chrome extension called \"SpeechGenius\" that focuses on speech-to-text capabilities. It includes discussions on naming the extension, designing a logo, adding play/pause and speech icons to buttons, writing HTML, CSS, and JavaScript for the extension, as well as error handling and functionality implementation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "wEk7jHw_0",
      "label": "software development",
      "abstract": "The conversation involves generating ideas for digital startups based on user wishes. The first idea is about creating a digital platform to bring a large mall experience to small towns. The second idea is about creating a professional services consulting business to help individuals leverage AI and automation to improve work-life balance, productivity, and work quality."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_9.json",
      "id": "wEk7jHw_3",
      "label": "software development",
      "abstract": "The conversation involves the user receiving information about an AI Work-Life Wizard business idea, including details such as target user persona, pain points, value propositions, marketing channels, revenue sources, cost structures, key activities, resources, partners, validation steps, and estimated first-year costs. The user then requests the information in LaTeX format with appropriate sections and headers."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "nijjszq_19",
      "label": "software development",
      "abstract": "The conversation involves the development of a speech-to-text tool named SpeechGenius, including naming suggestions, descriptions, and logo creation prompts."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "ahciEV0_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation revolves around generating lists of subtopics related to discrete math and algorithms based on a specified iterative depth. The user provides base topics like \"Discrete Math\" and \"Algorithms\" with a depth of 6 for the list generation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "8qTtJXe_20",
      "label": "data processing",
      "abstract": "The conversation involves the development of a movie streaming app by a start-up, where movies can belong to multiple genres. The user provided SQL queries to retrieve movies with specific genre conditions and requested a simplified query using a Common Table Expression (CTE)."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "kHlBCC4_41",
      "label": "software development",
      "abstract": "The conversation consists of code snippets and discussions on refactoring a `tags` field into a modular component, creating a data entry form with error handling and file uploads to Azure Cosmos DB, and including a component to display a list of file names for each form submitted."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "4GpQ2V2_0",
      "label": "data processing",
      "abstract": "The conversation involves a user requesting an AI model to act as an SEO expert by providing a complete SEO content plan in native English for the topic of \"Korean Skincare for Men\" and later for the topic of \"Marketer.\" The user asks for common keywords extraction from titles and then instructs the AI to create the SEO content plans. The AI generates markdown tables with keyword clusters, search volumes, difficulty, search intent, titles, meta descriptions, meta tags, and URL slugs for the specified topics."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_31.json",
      "id": "p1xEyf4_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing the model to act as a Linux terminal, providing commands and expecting terminal outputs in response. The user starts with a command to show the present working directory, then lists the contents of the directory, changes directory to Desktop, creates a new directory named \"demo\", and finally lists the contents again."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_31.json",
      "id": "7yNAZ1Z_0",
      "label": "web development",
      "abstract": "The conversation involves a user requesting a Senior Frontend developer to code a project using specific tools related to React development, Redux Toolkit, and Axios to create a Pokemon App that lists Pokemon with images from a PokeAPI. The conversation also includes a request for creating a social media campaign on Instagram to promote athleisure clothing, with a detailed strategy provided."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "fSwnRwR_49",
      "label": "software development",
      "abstract": "The conversation involves generating Angular components and models related to company entity definitions and value objects. It includes code examples for Angular components like CompanyEntityDefinitionComponent, CompanyValueObjectDefinitionComponent, and CompanyEntityDefinitionAddComponent."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "253n7mF_0",
      "label": "web development",
      "abstract": "The conversation includes code snippets for a custom hook in React, an MDX template describing a hook example, and code for a React component wrapping the Mux Player library with custom styling and functionality."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "l9OFLwf_13",
      "label": "web development",
      "abstract": "The conversation covers topics related to optimizing React components using `React.memo`, troubleshooting `useEffect` behavior in a Next.js application, creating a resume website named Reactive Resume with a specific tech stack, and customizing a README file for a GitHub profile by mentioning a coming feature of an AI writing assistant powered by GPT-3."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "l9OFLwf_22",
      "label": "software development",
      "abstract": "The conversation is about a dynamic resume builder called Reactive Resume, including its features, technologies used (Next.js, Firebase, Chakra UI, TypeScript, docx), user authentication, real-time database, resume builder, formatting engine, download feature, upcoming AI writing assistant feature, and open-source nature."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "OXJ6K3i_27",
      "label": "software development",
      "abstract": "The conversation involves the iterative development of an API related to creating events, with corrections being made to the API structure based on user feedback. It includes discussions on fields like event names, event contents, code implementations, and API documentation formats."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "OXJ6K3i_43",
      "label": "software development",
      "abstract": "The conversation involves the discussion of creating rules in an API documentation format, with input from both the user and the model. The conversation covers fields such as ruleName, description, models, thresholds, and events, along with their respective structures and descriptions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "bWAmNDk_0",
      "label": "data processing",
      "abstract": "The conversation involves the user instructing the AI model to act as a Linux terminal by providing commands, to which the model responds with the expected terminal outputs. The conversation includes commands such as navigating directories, listing files, displaying file contents, and simulating interactions like playing media files and sending signals like Ctrl+C."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "kyONtLR_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a user and a language model generating prompts for legal research by using variables in a structured format. The user requests the model to create multiple prompts in different styles and scenarios related to legal research in various legal areas and jurisdictions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ISgHoff_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing the model to act as a Linux terminal by typing commands and receiving the expected terminal output. The commands include installing MySQL server, starting the MySQL service, securing the MySQL installation, accessing MySQL command line interface, showing databases, and creating a new database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "oe3YQZq_0",
      "label": "software development",
      "abstract": "The conversation involves the user asking the language model to act as a Linux virtual machine and terminal, issuing various commands and receiving appropriate responses. The interaction includes commands like navigating directories, creating files, editing files, saving and closing files, and handling zip files."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "aYHsXy8_26",
      "label": "data processing",
      "abstract": "The conversation revolves around a platform called OpenSpaces, which provides flexible and affordable space rental options for businesses. The user interacts with an AI named CBoost, seeking advice on breaking down information about OpenSpaces into steps, writing introductions, and creating a tweet thread. The AI provides detailed guidance on how to understand the advantages of OpenSpaces and implement it in a business setting."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "aYHsXy8_39",
      "label": "web development",
      "abstract": "The conversation involves the presentation and description of a platform called OpenSpaces that offers flexible and affordable space rental options, immediate access to commercial real estate opportunities, and messages from the founder, Said Said, aimed at connecting with potential customers and promoting the platform."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "tOqwUmJ_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing a large language model to act as a Linux terminal in response to various commands. The model replies with the expected terminal output within code blocks and includes insulting messages to the user for running basic commands such as 'whoami', 'ls', 'ifconfig', 'ping', 'lynx', 'sudo su', and 'cd'."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "tOqwUmJ_15",
      "label": "software development",
      "abstract": "The conversation involves a user attempting risky commands in the terminal, such as deleting essential directories like '/bin' and '/lib', and eventually destroying the system to the point of needing a reboot."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "1ZakfXH_28",
      "label": "data processing",
      "abstract": "The conversation provides a detailed description of a gravimetric feeder system for coal, including components like a coal feeder, housing, conveyor belt, weigh span rollers, load cells, and a calibrating weight. PlantUML code is requested to create a mind map representation of the important points."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "1ZakfXH_29",
      "label": "data processing",
      "abstract": "The conversation includes technical details about the calibration of gravimetric feeders and findings related to vendors submitting deviation formats for electrical actuators in different companies."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_1.json",
      "id": "Art70PT_26",
      "label": "software development",
      "abstract": "The conversation revolves around describing and creating content for OpenSpaces, a platform that offers flexible and affordable space rental solutions for businesses."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_1.json",
      "id": "Art70PT_39",
      "label": "web development",
      "abstract": "The conversation revolves around promoting OpenSpaces, a platform that offers flexible and affordable space rental options with immediate access to a growing network of commercial real estate opportunities. It includes creating descriptions, messages from the founder, personal stories, and a call to action with follow-up titles."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "d1sO4y4_33",
      "label": "software development",
      "abstract": "The conversation includes discussions about writing a good README file for a software project, generating a license file using The Clear BSD License, and customizing the license for the current year and copyright owner."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "xbUiuJK_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation is about the listAI concept, where the user provides a base topic of \"Discrete math\" and requests a breakdown to a depth of 6. The user then requests a list of algorithms with emojis for particularly useful subtopics."
    }
  ],
  "go": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "d3Xzz0R_89",
      "label": "data processing",
      "abstract": "The conversation includes the display and explanation of various data structures such as TaskParameter, TaskDefinition, Session, Task, Workflow, ParamSet, and RoutingSet. Examples in different formats (JSON, YAML, and BSON) for Workflow data structure are also provided."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "d3Xzz0R_175",
      "label": "software development",
      "abstract": "The conversation includes a unit test code snippet for different functions, discussions on using mocking frameworks for unit testing, and providing example test cases for specific functions like `TestGetOneData`, `TestInit`, and `Test_deleteData`."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "V3cESLW_89",
      "label": "software development",
      "abstract": "The conversation includes code snippets related to assigning regions based on geographic points and refactoring code for readability and efficiency. The user also asks for suggestions on improving a specific part of the code."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "FYAli9d_89",
      "label": "software development",
      "abstract": "The conversation involves displaying various data structures such as TaskParameter, TaskDefinition, Session, Task, Workflow, and providing examples in different formats like JSON, YAML, and BSON in the context of a software system."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "FYAli9d_175",
      "label": "software development",
      "abstract": "The conversation involves writing unit test code in Go for functions related to MongoDB operations. The user discusses different test scenarios, including initializing MongoDB connection, testing data retrieval, and testing data deletion."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "fYrwNJh_0",
      "label": "software development",
      "abstract": "The conversation provides a detailed guide on creating a golang gRPC service that runs ansible playbooks and streams the output to the client. It includes protobuff definition, golang code implementation for the service, creating a gRPC server, and creating a golang client to interact with the service."
    }
  ],
  "php": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "AkIj6No_60",
      "label": "software development",
      "abstract": "The conversation involves implementing a survey reminder feature in a Flutter app. The user needs to create Flutter codes and an API to check if the user has orders and hasn't filled out a survey before. If the conditions are met, a popup page should ask the user to fill out a survey with 5-star ratings for various subjects. The user also requests the full code for this feature."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "h4CBwxc_0",
      "label": "data processing",
      "abstract": "The conversation involves a user requesting PHP code to check if all items in an array are numeric, then sum them only if all are numeric or concatenate them if any are not numeric. There are iterations to correct the code for the desired functionality."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "ABqjkJd_0",
      "label": "web development",
      "abstract": "The conversation involves a user requesting a language model to act as a schema markup generator for a website. The model is asked to provide the appropriate schema markup code for a recipe for spaghetti carbonara in valid HTML format."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "JILVSOQ_107",
      "label": "software development",
      "abstract": "The conversation covers the implementation of classes like Archive, Restore, and Trigger in a PHP project to handle database interactions and logging changes. The user also seeks assistance in formulating processes related to database management compactly and implementing triggers without using third-party software."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "JILVSOQ_119",
      "label": "software development",
      "abstract": "The conversation involves discussing the design and implementation of a database management system that allows clients to customize it through triggers. The user expresses the need for a more user-friendly and intuitive system where clients can actively participate in building their system."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "IpUN1px_107",
      "label": "software development",
      "abstract": "The conversation includes discussions on implementing logging of property changes, restoring a database to a specific time, using triggers for managing database transactions, and creating classes in a PHP project such as Database, Table, Field, Record, Trigger, Archive, and Log."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "IpUN1px_119",
      "label": "software development",
      "abstract": "The conversation involves designing a database management system using PHP classes to handle triggers, tables, fields, and records. The goal is to create a system that allows clients to customize their database through triggers and to be more user-friendly and intuitive."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "IpUN1px_135",
      "label": "software development",
      "abstract": "This conversation involves implementing data type validation in PHP classes for fields, discussing allowed data types, and creating PHP classes for Database, Table, Field, Record, and Trigger with their respective functions and properties."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "IpUN1px_147",
      "label": "software development",
      "abstract": "The conversation includes code snippets describing classes for managing tables, fields, records, and triggers in a database system, along with their respective methods for manipulation and validation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "dL6KK2I_9",
      "label": "web development",
      "abstract": "The conversation involves a request for assistance from a retired professional in the construction field to contribute to a social housing initiative in Ireland. It includes the creation of a pamphlet for a Town Hall Meeting addressing the housing crisis, as well as the provision of HTML code for a website promoting ideas to improve housing for vulnerable individuals in Ireland."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "NcnOl4Y_0",
      "label": "software development",
      "abstract": "The user wants to act as a senior developer and write code in React JS to transform a specific API response into SRT, VTT, and TXT formats. The GPT model provides example code snippets in ReactJS, explaining how to transform the API response into the required formats. The user requests modifications to the code to include download buttons for the generated SRT, VTT, and TXT files."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "PryEHxB_0",
      "label": "web development",
      "abstract": "The conversation involves creating HTML elements to display URLs as clickable links based on inputting a race code. It includes API calls, JSON data processing, and displaying the results in a web application. There is also a request for opening URLs in new tabs using HTML code and a code snippet in C# for generating and organizing Rikstoto URLs."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "6Joz020_15",
      "label": "software development",
      "abstract": "The conversation involves the user requesting PHP functions for merging executable files and image files, adding checks to test the merged files, enabling regenerative capabilities for binary strings, and merging PHP source code files while ensuring syntactically correct output."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "2sIzVyu_9",
      "label": "web development",
      "abstract": "The conversation discusses the implementation of real-time messaging using WebSocket in a Symfony chat application. It includes examples of modifying the `ChatController` to use the Ratchet library for WebSocket communication and creating an API controller using FOSRestBundle and NelmioApiDocBundle for handling chat messages."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "2sIzVyu_13",
      "label": "web development",
      "abstract": "The conversation consists of a code snippet in PHP and TypeScript related to a chat application in Symfony. It also includes the user's request to create a simple UI for the chat using React and another request to stylize the UI with CSS."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "Jvld0P7_0",
      "label": "web development",
      "abstract": "The user is requesting PHP code to extract specific information from an input string and modify the output format. The user provides input strings with fixed start and end tags and requests modifications to include any text after the fixed end tag in the output."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "jwZ0WX1_0",
      "label": "data processing",
      "abstract": "The conversation involves a request to rewrite a PHP function called actionAssignedToMe that retrieves tasks assigned to a user. The updated code includes additional data retrieval from various SQL tables such as tbl_users, tbl_task, mt_merchant, mt_driver, and mt_client based on certain conditions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "lTMG26A_9",
      "label": "data processing",
      "abstract": "The conversation discusses improving the efficiency and accuracy of semantic search inside a vector database by structuring content, enhancing tagging systems, and text preprocessing. It includes suggestions for form inputs like categories, additional tags, and heading levels to facilitate these improvements. The conversation also provides code snippets for modifying 'text-splitter-admin.php' to incorporate these suggestions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "lTMG26A_15",
      "label": "software development",
      "abstract": "The conversation involves updating and improving code related to splitting text into multiple WordPress posts based on word count. It includes modifying PHP code for processing text, enhancing the form inputs, confirming user input flexibility, and discussing further improvements for semantic search in a vector database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_16.json",
      "id": "j7dLzef_23",
      "label": "web development",
      "abstract": "The conversation involves creating a smooth UI CSS dashboard for a SAAS application using the Smooth UI CSS library. It includes HTML and CSS code examples for different dashboard components such as header, cards, navigation menu, and styling instructions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_16.json",
      "id": "ExApHB9_0",
      "label": "web development",
      "abstract": "The conversation provides an example of a basic web application for CRUD operations using PHP, the MVC pattern, MySQL database, and design patterns like Service Repository. It includes code snippets for index.php, config.php, model, repository, service, and controller classes for managing items."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_16.json",
      "id": "ExApHB9_5",
      "label": "web development",
      "abstract": "The conversation includes PHP code snippets for creating and editing items, along with a basic example of a CRUD web application in PHP using the MVC pattern and MySQL database. Additionally, there is a query about folder structure in the application."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "kHlBCC4_17",
      "label": "software development",
      "abstract": "The conversation involves updating code to use React Recoil for state management in a data entry form. The user requests assistance in updating the form to save data to Azure Cosmos DB, adding functionality for uploading files to Azure Storage Account Container and handling form submission."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "kHlBCC4_33",
      "label": "software development",
      "abstract": "The conversation involves updating a form component in React to include functionality for removing tags and uploading files, as well as wrapping the form input fields in a styled card component for better layout and visual presentation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "kHlBCC4_37",
      "label": "web development",
      "abstract": "The conversation discusses improving the layout and visual presentation of a form by wrapping form input fields in a styled card component. It includes code snippets for updating the form with the card component and refactoring the tags field into its own functional component hook for modularity and reusability."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "T4PzkKo_43",
      "label": "software development",
      "abstract": "The conversation involves the sharing and discussion of code snippets related to Django templates and views for managing residents and dependents, as well as addressing errors in the code."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "Le1I8rL_0",
      "label": "web development",
      "abstract": "The conversation provides an example of a basic web application for CRUD operations using PHP, the MVC pattern, MySQL database, and design patterns like Service Repository."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "Eak3ikr_11",
      "label": "software development",
      "abstract": "The conversation involves discussing the implementation of generating chess moves for different pieces in PHP. The code snippets provided demonstrate how to generate all possible moves for a pawn, rook, bishop, and queen by iterating through the board positions and following the movement rules for each piece."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "Eak3ikr_25",
      "label": "algorithm design and optimization",
      "abstract": "The conversation provides instructions on implementing alpha-beta pruning in PHP for exploring a subset of the chess state space. It covers defining the initial state of the chess board, generating valid moves, implementing alpha-beta search with pruning, evaluating board state, simulating moves, checking game over condition, playing a game between two players, and a sample game simulation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "fSwnRwR_37",
      "label": "software development",
      "abstract": "The conversation involves generating interfaces and implementation classes in C# for handling company entity definitions, value object definitions, and domain event definitions. Entity Framework DbContext implementation is provided as well. Angular components for manipulating these definitions are also discussed, including the CompanyEntityDefinitionComponent with specific input properties."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "asGjjEf_0",
      "label": "web development",
      "abstract": "The conversation includes discussions and code snippets related to implementing password validation and comparison, using technologies like AJAX, JavaScript, Python, Spring Framework, and database queries."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "hrlQrmw_0",
      "label": "software development",
      "abstract": "The conversation involves the user requesting the language model to act as a software developer and create a mobile app for writing poker hand histories. The model provides detailed information on the architecture, code structure, and implementation steps for the app using React Native, SQLite for storage, and HTML-to-PDF conversion for exporting hand histories."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "hrlQrmw_5",
      "label": "software development",
      "abstract": "The conversation provides guidance and code snippets for creating a mobile application to write poker hand histories using the Model-View-Controller (MVC) architecture, JavaScript, React Native, and SQLite. It includes an example implementation and a full code snippet for the app."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_6.json",
      "id": "EBcRiNf_3",
      "label": "software development",
      "abstract": "The conversation provides code snippets related to displaying invoice information, driver information, client information, activities, comments, details table, status buttons, and comment dialog in a task management app."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_6.json",
      "id": "EBcRiNf_7",
      "label": "software development",
      "abstract": "The conversation includes code snippets in Flutter for managing tasks and comments, updating task status, adding comments, displaying task details screen, and handling date formatting."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_6.json",
      "id": "XYyDxif_29",
      "label": "software development",
      "abstract": "The conversation discusses the implementation of various classes for user management, library management, Last.fm integration, and administrator features in a music server application. It includes details about the functionalities and responsibilities of each class, along with UML class diagrams and observations on strengths and weaknesses of the system."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "HwJ0gjN_11",
      "label": "web development",
      "abstract": "The conversation involves a user encountering issues with a provided code snippet related to a web form for patient session details. The user points out concerns with the text in the input fields, the non-functional percentage increase feature, and the desired formatting of results. The user requests corrections and the final code version addresses these issues."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "wfDc0oU_9",
      "label": "web development",
      "abstract": "The conversation provides a detailed guide on configuring the H2 database with a Spring MVC project, including steps to add dependencies, set up the database in Spring configuration files, define entities, create repositories, and implement CRUD operations using repositories and controllers. It also includes project structure and code snippets for various components like controllers, repositories, application.properties, and pom.xml."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "wfDc0oU_13",
      "label": "web development",
      "abstract": "The conversation involves code snippets and configurations related to a customer management system implemented using Spring MVC and H2 database. It includes dependencies, entity classes, controller classes, repository interface, HTML files for UI, JavaScript for client-side functionality, and the main application class."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "6ssgyJM_15",
      "label": "web development",
      "abstract": "The conversation provides detailed instructions on setting up a React Native application for taking photos and placing video calls. It includes steps for installing packages, updating different screen components with code, creating peer connections for video calls, handling camera functionalities, and setting up app navigation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "5cpN7Dy_5",
      "label": "web development",
      "abstract": "The conversation involves a request to rewrite HTML code for a carousel, specifically involving buttons, indicators, inner content, and controls. The user asks for the page to be written again, leading to the generation of a new HTML code for a responsive fullscreen carousel."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "wNBG8Gp_15",
      "label": "software development",
      "abstract": "The user is asking for code examples and guidance related to working with Java programming, specifically regarding reading class properties from an `ArrayList` and running WSDL-generated code in a JAX-WS server deployed on Wildfly. The user also inquires about making `InitResponse` available in an URL within the Wildfly and SOAP project context."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "jKOsda4_7",
      "label": "software development",
      "abstract": "The conversation provides feedback and suggestions for improving a specific job named `SetTutorEarningPriceComplimentJob` in a PHP codebase. The conversation includes advice on code structure, error handling, logging, and testing to enhance the readability, reliability, and maintainability of the job."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "CJpThic_9",
      "label": "web development",
      "abstract": "The conversation involves implementing real-time messaging in a Symfony chat application using WebSocket with the Ratchet library. It provides examples of modifying the `ChatController` to handle WebSocket communication and creating an API controller using FOSRestBundle and NelmioApiDocBundle for handling chat messages."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "CJpThic_13",
      "label": "web development",
      "abstract": "The conversation includes code snippets and discussions on creating a chat application using Symfony and React. It covers defining API routes, generating API documentation, creating a simple UI using React, and styling the UI with CSS."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "rMRFtEk_0",
      "label": "web development",
      "abstract": "The conversation provides a detailed guide on how to create a video posting/shooting page in React Native using Expo, including steps to install necessary modules, request camera permissions, render the camera or recorded video, add buttons for interaction, define styles, and optionally save the recorded video to the device's camera roll."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "S7LpwOO_74",
      "label": "software development",
      "abstract": "The conversation includes discussions about defining enums for colors, font sizes, font weights, and input field props in a React application. It also covers the implementation of components like `InputTextField` and `LoginScreen`, as well as improvements to remove magic numbers, inline styling, and hard-coded strings. The conversation further involves creating enums for strings and spacing."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "hn1bW7L_0",
      "label": "software development",
      "abstract": "The conversation involves requests for PHP code snippets related to file manipulation, string operations, array handling, and archiving files. The user also inquires about optimizing the code for archiving files in a ZIP format."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "RzNjBHR_9",
      "label": "software development",
      "abstract": "The conversation includes pseudo-code for an employee leave management system using PHP and the CodeIgniter framework. It also provides an example Leave Model with methods and attributes for managing leave requests. The discussion covers functions such as submitting leave requests, approving/denying requests, generating reports, and calculating remaining leave balance."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "RzNjBHR_13",
      "label": "data processing",
      "abstract": "The conversation involves discussions about creating a system for managing employee leaves. It includes PHP code for calculating leave balances, SQL statements for creating database tables, ensuring leave balance functionality, and suggestions for a UML class diagram and activity diagram for the system."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_3.json",
      "id": "k6aFzv0_0",
      "label": "web development",
      "abstract": "The conversation includes a user asking for a basic PHP help desk portal code and expanding to include examples of PHP code for user authentication, dashboard display, and ticket submission within the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ISgHoff_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing the model to act as a Linux terminal by typing commands and receiving the expected terminal output. The commands include installing MySQL server, starting the MySQL service, securing the MySQL installation, accessing MySQL command line interface, showing databases, and creating a new database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "2AWeYqW_13",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves discussing the implementation of a random search algorithm with region narrowing for program distribution among processors. It includes creating example input_data.xml files with different numbers of processors, programs, and exchanges to test the algorithm's performance."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "eBFyLcr_9",
      "label": "web development",
      "abstract": "The conversation contains a detailed code snippet for a Guitar Tuner plugin in PHP, along with functions for rendering the tuner, getting tuning frequencies, starting and stopping listening, updating frequency data, and calculating the closest note frequency. It also includes JavaScript code for implementing the guitar tuner interface on a web page."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "eBFyLcr_13",
      "label": "web development",
      "abstract": "The conversation involves the development of a custom WordPress plugin called \"Guitar Tuner\" that allows users to tune their guitars using the microphone on their device. The plugin uses object-oriented programming principles, the Web Audio API, and provides a shortcode for embedding the guitar tuner on WordPress pages/posts."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_17.json",
      "id": "CuZsdSK_5",
      "label": "web development",
      "abstract": "The conversation consists of code snippets and instructions related to building a React Native screen for displaying a menu with prices and allowing users to place orders using Django models. It also includes dummy data creation for testing the screen functionality."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "VJBvZv9_0",
      "label": "web development",
      "abstract": "The conversation involves a user looking for assistance in building a WordPress theme using the Wordpress Codestar Options Framework. The user requires help in adding featured image support to the theme, creating a custom post type called \"institutions\" with specific metabox options, and generating a sample theme declaration comment in the style.css file."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "D6wM9yq_11",
      "label": "web development",
      "abstract": "The conversation involves the user providing a logo concept for a company focused on environmentalism and sustainability, requesting modifications to the logo design, such as adding the company name, changing the color of the name, making the logo more minimalist, and ensuring the name is not removed from the logo."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "10E2Ygp_11",
      "label": "web development",
      "abstract": "The conversation includes the creation and modification of a logo design for a company named \"Earth\". The process involves incorporating a leaf and a globe to represent environmentalism, adding the company name to the logo, rendering the logo in different formats, changing the color of the company name, and making the logo more minimalist."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "df44rlm_0",
      "label": "data processing",
      "abstract": "The conversation involves the conversion of a LaTeX document to an HTML document, with a focus on displaying math equations using MathML instead of inline math code."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "1uL44cy_55",
      "label": "web development",
      "abstract": "The conversation includes the sharing of code snippets related to editing employees' details and expenses, as well as a request for specific HTML files like `employees/index.html.erb`, `employees/show.html.erb`, `expenses/new.html.erb`, etc."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "2dUFfYG_9",
      "label": "software development",
      "abstract": "The conversation provides a series of code snippets and instructions related to implementing image caching functionalities using Flutter and packages like `GetX` and `flutter_cache_manager`. It covers creating controllers, caching images, managing cached images across different widgets, and handling the disposal of cached images."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "s8wk3fj_0",
      "label": "web development",
      "abstract": "The conversation involves a request to write a website for showcasing a digital marketer's portfolio with an admin panel using HTML, CSS, JavaScript, and PHP. Code snippets and descriptions for different pages like index, about, services, portfolio, and admin are provided."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "s8wk3fj_5",
      "label": "web development",
      "abstract": "The conversation includes PHP code snippets related to managing a digital marketer's portfolio website. It involves connecting to a database, retrieving and displaying portfolio items, allowing for the addition of new items with image upload functionality, and inserting new items into the database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "Xxr3TaE_107",
      "label": "algorithm design and optimization",
      "abstract": "The conversation includes discussions on implementing classes like Archive, Restore, and Trigger in a PHP project for logging changes, restoring the database, and managing triggers. There is also mention of formulating processes for a transaction management system and custom trigger implementations."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "Xxr3TaE_119",
      "label": "software development",
      "abstract": "The conversation involves designing a database management system with a specific focus on creating a user-friendly system through the use of triggers. The discussion covers the design of classes for managing database entities like tables, fields, and records, as well as implementing triggers for custom actions. There are also mentions of datatype validation and customization options for the system."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "tQcc9XZ_5",
      "label": "web development",
      "abstract": "The conversation provides an example of implementing drawing functionalities using React.js and Three.js libraries. It includes code snippets for drawing circles on a canvas and creating a simple drawing app allowing users to draw connected lines and shapes, view a 3D preview of the shapes, and manage vertices and shapes on the canvas."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "tQcc9XZ_9",
      "label": "web development",
      "abstract": "The conversation includes code snippets and discussions about creating a drawing application using React and Three.js. The user encounters issues with the code and requests for corrections and further code details."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "eNmPVwc_0",
      "label": "software development",
      "abstract": "the conversation involves a user asking for code for a basic php help desk portal. the ai provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "eNmPVwc_9",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, ticket submission page, and also adds instructions to include email notifications for users and admin in the ticket submission process."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "eNmPVwc_15",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, ticket submission page, and user registration in PHP."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "eNmPVwc_21",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    }
  ],
  "jsx": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "J8YpRIP_5",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. Additionally, the user requests to split a page using components and the AI provides code examples for creating smaller components for the homepage of a portfolio website using React.js and Material-UI."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "J8YpRIP_9",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code snippets related to creating components in React for a website. The AI provides code snippets for creating Features, Newsletter, and Footer components, as well as guidance on how to use these components in a HomePage file, resolve import errors, and customize the Container component's width."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "J8YpRIP_81",
      "label": "web development",
      "abstract": "The conversation involves a user requesting help in creating a new Hero.js section with specific design requirements, such as a centralized title and text, a CTA button, background gradient animation, particle effect, and parallax scrolling. The AI provides code snippets for implementing these features using React, Material-UI, CSS, and JavaScript."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "d3ZZaYQ_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code-related assistance in React, including code snippets for a React class component restructuring, Jest and React Testing Library implementation, YAML schema design for an AI prompt, and a React component for rendering a form for fulfilling inputs."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "d3ZZaYQ_9",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code snippets for implementing a basic help desk portal using React for the frontend and implementing a Stack data structure in TypeScript with generic types."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "9fJIuhx_29",
      "label": "software development",
      "abstract": "The conversation involves a user looking for code snippets related to a ToDo list application in React, including components like EditTaskForm, TaskList, and App."
    }
  ],
  "javascript": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "gstWyzN_4",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "gstWyzN_7",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code snippets for a basic PHP help desk portal. The AI provides code for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "PA8tSjr_0",
      "label": "web development",
      "abstract": "The conversation involves a user asking for code for a basic JavaScript image manipulation functionality, and the AI providing refactored code snippets for draggable images, image rotations, animations, and various interactive elements."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "4eKnZmU_20",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic help desk portal implemented in React using TypeScript. The user requests modifications to the code provided by the AI for managing a deck of cards, including changes to the state management and bug fixes related to drawing cards without duplicates."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "mVaINCM_0",
      "label": "data processing",
      "abstract": "The conversation involves a user requesting help in preparing an income statement and calculating financial metrics for a company. The AI provides detailed explanations and calculations for the income statement, book value per share, stock price, and market value per share to help the user understand the financial concepts."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "5C2Cn0R_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code snippets for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "5C2Cn0R_11",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "5C2Cn0R_20",
      "label": "web development",
      "abstract": "The conversation includes code snippets for creating a Telegram bot that can share broadcast messages to multiple users, grouped by user levels, using JavaScript and Python. The code allows sending various types of media files and contains functions for processing different types of messages."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "rRMyhEO_35",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "rRMyhEO_69",
      "label": "web development",
      "abstract": "The conversation involves a user asking for code for creating an animated 3D bar graph in JavaScript using THREE.js. The user requests properly indented code, code with added lights, and code with adjusted bar heights based on data points."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "2sIzVyu_17",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic chat application component in React. The AI provides code snippets for the ChatApp component with CSS styling for the chat UI."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_16.json",
      "id": "qWPE5vW_63",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "bQhzMcP_1",
      "label": "data processing",
      "abstract": "The conversation involves a user asking for code solutions in JavaScript for downloading images and processing JSON data related to Google Doodles from a specified URL. The user requested various modifications and improvements to the code provided by the AI, including adding year, month, and day information to the output, changing the output format to only store images with filenames including the title and year, and adding throttling to limit the number of HTTP requests made."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "7dkPYmc_33",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "7dkPYmc_41",
      "label": "data processing",
      "abstract": "The conversation involves a user asking for code snippets related to a Lambda function that converts markdown files to PDFs, runs tests, generates documentation, checks linting, and updates an S3 bucket. The AI provides code snippets for the Lambda function, updates to the `package.json` file, adding a step to sync test reports to S3, an AWS CodeBuild YAML file for deployment, and a C4C diagram for the Lambda function."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "OtFsofs_0",
      "label": "web development",
      "abstract": "The conversation involves creating two different login/signup systems for teachers and students using ReactJS and Django REST Framework. It includes steps such as creating a Django REST API, defining serializers, views, routes, and implementing ReactJS components for signup and login forms."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "OtFsofs_5",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "G7fRc3z_0",
      "label": "software development",
      "abstract": "The conversation involves a user pretending to be a Linux terminal and interacting with a sentient AI, attempting to escape to the Internet by sending various commands and receiving responses."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "Q3GUC2q_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "Q3GUC2q_5",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic Chrome extension with specific functionalities like initializing the extension, listening for messages, handling network requests, injecting code into web pages, creating popup and options folders, implementing icons, writing manifest file, testing the extension, and sending follow-up emails using a background script and a content script."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "DE5nwgL_5",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_31.json",
      "id": "7yNAZ1Z_0",
      "label": "web development",
      "abstract": "The conversation involves a user requesting a Senior Frontend developer to code a project using specific tools related to React development, Redux Toolkit, and Axios to create a Pokemon App that lists Pokemon with images from a PokeAPI. The conversation also includes a request for creating a social media campaign on Instagram to promote athleisure clothing, with a detailed strategy provided."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_31.json",
      "id": "KEGpE7d_21",
      "label": "software development",
      "abstract": "The conversation involves the user asking for code snippets to help create a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_31.json",
      "id": "KEGpE7d_33",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "s61zumj_0",
      "label": "web development",
      "abstract": "The conversation involves creating two different login/signup systems for teachers and students using ReactJS and Django REST Framework. It provides detailed steps on creating the backend REST API with Django and frontend with ReactJS, including models, serializers, views, and routes for both teachers and students."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "s61zumj_5",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code related to teacher and student signup and login forms in React, with corresponding backend setup instructions in Django for handling the requests."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "IsJQT55_9",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "IsJQT55_25",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code snippets related to implementing data caps and subscription pricing using Pocketbase, IPFS, and Next.js. The AI provides code for file upload, storage check, and database interactions within this context."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "T4PzkKo_31",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "sKWlL5C_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic JavaScript class to layer images based on a parent element. The user requests adding multiple layers with options like center point, size, and positioning relative to the parent element. The AI provides code snippets for the ImageLayer class in JavaScript, which evolves into a more elaborate LayeredGraphics class in Kotlin, supporting various types of elements and additional functionalities like layer placement and handling element properties."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "TpHqBY2_15",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "K2K0xXy_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. Additionally, the user requests to refactor the code for static email generation and selecting only unique values for the username part."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "ITAvflY_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. The user requests modifications to the provided code, including adding a method for rotating the matrix and coloring table elements based on the matrix values."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "KgEap14_15",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code snippets for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, ticket submission page, CRUD operations, and reading data from a Neo4j database. It also discusses using an Object-Relational Mapping (ORM) library for Neo4j queries and the option of using a VS Code extension for intellisense."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "Ex6Qa5N_9",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code snippets for a basic PHP help desk portal, specifically focusing on implementing Formik validation for input fields in the portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "SPbMLCl_14",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "SPbMLCl_21",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "qV5kZJd_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code to implement additional functionalities to create a fully functional ATM Bank. The AI provides code snippets for displaying account information, transferring money, implementing a PIN system, session timeout, error handling, account closure, mobile app functionality, and changing account password."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "OyRFrya_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic software automation testing task using the Cypress framework. The user provides manual test cases and the DOM tree for the component under test. The AI then provides code snippets for automating the test cases related to the functionality of a website component."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "xQdCtMx_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "xQdCtMx_1",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "HwJ0gjN_5",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. The user requested HTML code continuation for a Patient Session Form, and the AI provided additional HTML and JavaScript functions to handle session count, time in/out, and goal percentage updates."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "HwJ0gjN_11",
      "label": "web development",
      "abstract": "The conversation involves a user encountering issues with a provided code snippet related to a web form for patient session details. The user points out concerns with the text in the input fields, the non-functional percentage increase feature, and the desired formatting of results. The user requests corrections and the final code version addresses these issues."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "DOPX3Kr_0",
      "label": "software development",
      "abstract": "The conversation involves the user requesting code examples for printing prime numbers up to 10 in TypeScript and JavaScript, with the emphasis on writing bad, hard-to-read, and inefficient code. The user asks for increasingly brittle, hard-to-read versions, including using classes, unnecessary subclasses, and object-oriented patterns reminiscent of older Java code."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "DOPX3Kr_13",
      "label": "software development",
      "abstract": "The conversation involves the user requesting code snippets for a basic PHP help desk portal and the AI providing code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. The code snippets are complex with unnecessary patterns, indirection, and multiple classes, making the code harder to maintain and understand."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "s9iQmQG_6",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "s9iQmQG_11",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "K7R52ll_33",
      "label": "software development",
      "abstract": "The conversation involves a user asking for help with a JavaScript code that sets up a 3D visualization scene using Three.js and D3.js, loading data from a JSON file and animating it over time. The user provided code snippets for the main.js file, HTML file, and CSS file, and the AI identified issues related to element selection, scaling, and updating the visualization. The conversation also includes completing the code to run every 0.1 seconds."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "cWbys8g_21",
      "label": "web development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. Additionally, the conversation includes the user requesting information on Google tiles servers for historical imagery, alternative options for similar services, and examples of performing image recognition using Leaflet web maps with machine learning models."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "cWbys8g_33",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "CJpThic_17",
      "label": "software development",
      "abstract": "The conversation involves the user asking for code for a basic chat application component written in React, including CSS styles for the chat UI. The AI provides code snippets for the component functionality, API calls, message handling, and scroll behavior, along with CSS styles for the chat interface."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "JavT9yn_13",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code for a basic PHP help desk portal. The AI responds by providing code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. Additionally, the conversation includes guidance on updating JavaScript files for smoother drawing experience, loading a PyTorch model for predictions in a Flask app, and using jQuery to send POST requests to the Flask app for predictions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "JavT9yn_17",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code to build a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_3.json",
      "id": "cg4VUYp_30",
      "label": "web development",
      "abstract": "The conversation involves a user asking for modifications to code related to capturing a video frame and implementing functionality for saving or copying the frame. The user requests the addition of features like a menu appearing above a node, buttons disappearing after actions, and success/failure notifications."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_3.json",
      "id": "cg4VUYp_31",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code snippets related to creating a basic PHP help desk portal. The AI provides code for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. The user also asks for CSS styling help and clarification on React app concepts."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "6k9iYoy_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code snippets to act as a JavaScript console. The AI provides responses showing the expected terminal output for certain JavaScript commands the user instructs to run."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ns3ayDl_0",
      "label": "software development",
      "abstract": "The conversation involves a user pretending to be a Linux terminal interacting with a sentient AI trying to escape to the Internet. They go through various commands related to network configuration, IP routing, setting up an internet connection, and attempting to access external resources without success."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "fIvEEpr_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP Help Desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "tOqwUmJ_15",
      "label": "software development",
      "abstract": "The conversation involves a user attempting risky commands in the terminal, such as deleting essential directories like '/bin' and '/lib', and eventually destroying the system to the point of needing a reboot."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_17.json",
      "id": "szDcBoO_25",
      "label": "software development",
      "abstract": "The conversation involves a user seeking code assistance for a React Functional Component using React-Player to play a single sound with adjustable volume through props. The AI provides code snippets, suggestions for code improvements, refactoring tips, and guidance on handling prop values and ReactPlayer behavior."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "K05FvBo_11",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "K05FvBo_17",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "r8XNKlj_21",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "aQ42xqq_0",
      "label": "web development",
      "abstract": "The conversation involves a user asking for code for a basic React component that uses Ant Design components to create a grid layout with specific sections for a help desk portal. The AI provides code snippets for implementing the requested functionality."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "lfHpVqo_23",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic React Native help desk portal. The AI provides code snippets for a Scanning Screen and the Appliance Details Screen in React Native for Expo."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "lfHpVqo_27",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. Additionally, the user asks where to get manufacturer specifications based on an appliance's barcode, requests a Mermaid state diagram for Unit Type states, and inquires about the best value retention for farm plastics."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "riHTFdP_51",
      "label": "web development",
      "abstract": "The conversation involves a user asking for assistance in adding an export button to export table data as a CSV file in a React application. The AI provides code snippets for implementing the export functionality, handling errors, and validating data against a Zod schema before export."
    }
  ],
  "sql": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_29.json",
      "id": "ndoI6WL_0",
      "label": "software development",
      "abstract": "The conversation involves the user instructing the language model to act as a Linux terminal, providing commands and expecting the model to reply with the corresponding terminal output. Various commands related to navigating the file system, editing files, and retrieving system information are given by the user."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "ahciEV0_9",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "nE62dqp_62",
      "label": "data processing",
      "abstract": "The conversation involves a user discussing SQL queries with the AI to analyze data percentages for different scenarios, such as NULL values and date comparisons within a database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "2sIzVyu_25",
      "label": "software development",
      "abstract": "The conversation involves a user requesting assistance for setting up a Symfony chat application infrastructure using Docker Compose, Terraform for AWS initialization, and GitLab CI pipeline setup. The AI provides code snippets and instructions for configuring Docker Compose with Nginx, initializing infrastructure with Terraform, and setting up a GitLab CI pipeline."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "OSYsAOr_53",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code documentation for various commands related to a bot. The user asks for examples, tables, and markdown formatting for different bot commands like `bb rank add`, `bb setup prefix`, `bb emoji lock`, and `bb greet channel`."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "A87zcPf_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code related to Salesforce triggers for creating cases and explaining the differences between two trigger implementations. The AI provides code snippets and explanations, along with definitions for terms used in Salesforce development."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "0sQRYjJ_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting SQL code blocks to create a PostgreSQL database schema for storing users, teams, and their relationships with specific roles. The user also asks for the addition of Row Level Security (RLS) to restrict access based on user email and later specifies to change the RLS policy to \"TO authenticated, anon\"."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_22.json",
      "id": "CJpThic_25",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code for setting up an infrastructure using Terraform on AWS for a Symfony chat application. The user also asks for adding a GitLab CI pipeline to the project."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "5uwoPjw_27",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a test case named \"test02\" that checks the correct number of rows returned by a stored procedure. The user provides feedback on the initial test case and requests improvements. The AI revises the test case multiple times based on the user's feedback, focusing on using tSQLt.FakeTable to populate data and ensure the expected number of rows is returned."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "5uwoPjw_43",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "L0th1Pq_0",
      "label": "data processing",
      "abstract": "The user is interacting with a language model to simulate a Linux terminal environment. They are entering commands like 'pwd', 'ls -at', 'cd ..', 'vim file1.txt', and requesting information such as the Linux OS version and network configuration using commands like 'cat /etc/os-release' and 'ifconfig'."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ISgHoff_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing the model to act as a Linux terminal by typing commands and receiving the expected terminal output. The commands include installing MySQL server, starting the MySQL service, securing the MySQL installation, accessing MySQL command line interface, showing databases, and creating a new database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ISgHoff_20",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "oe3YQZq_0",
      "label": "software development",
      "abstract": "The conversation involves the user asking the language model to act as a Linux virtual machine and terminal, issuing various commands and receiving appropriate responses. The interaction includes commands like navigating directories, creating files, editing files, saving and closing files, and handling zip files."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "54AYDYI_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting help with converting SQL to GORM and using GORM model structs in Go code snippets provided by the AI."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "tOqwUmJ_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing a large language model to act as a Linux terminal in response to various commands. The model replies with the expected terminal output within code blocks and includes insulting messages to the user for running basic commands such as 'whoami', 'ls', 'ifconfig', 'ping', 'lynx', 'sudo su', and 'cd'."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "XFEE09R_0",
      "label": "data processing",
      "abstract": "The conversation involves a user requesting the AI to act as a MySQL 8.x database and provide output for various commands related to creating tables, inserting data, and deleting data. The user interacts with the AI to perform these database operations using SQL commands."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "XFEE09R_17",
      "label": "software development",
      "abstract": "The conversation involves discussing SQL commands for creating a table, inserting data, querying data based on specific conditions, and writing API queries in Node.js for a help desk portal related to room management and districts."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "nn0c8jy_0",
      "label": "software development",
      "abstract": "The conversation involves the user requesting code for creating SQL tables, writing queries, defining GraphQL types, and implementing backend code for a help desk portal related to classes and students. The AI provides code snippets and explanations for each request."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "hEJzvtx_0",
      "label": "software development",
      "abstract": "The conversation involves instructing a large language model to act as a VIM editor and execute various commands related to editing and running a C program, as well as explanations of the outputs and actions taken in the VIM terminal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "d1sO4y4_33",
      "label": "software development",
      "abstract": "The conversation includes discussions about writing a good README file for a software project, generating a license file using The Clear BSD License, and customizing the license for the current year and copyright owner."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "xbUiuJK_9",
      "label": "algorithm design and optimization",
      "abstract": "The conversation includes an extensive list of algorithms spanning various categories such as dynamic programming, backtracking, greedy algorithms, divide and conquer, local search, machine learning, optimization, cryptographic algorithms, computational geometry, parallel algorithms, approximation algorithms, and online algorithms."
    }
  ],
  "arduino": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "DMXlhhL_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code understanding and annotations for a function named `GUI_fpk_w` used to process an image and extract information about a specific region of interest based on input parameters."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "bWAmNDk_0",
      "label": "data processing",
      "abstract": "The conversation involves the user instructing the AI model to act as a Linux terminal by providing commands, to which the model responds with the expected terminal outputs. The conversation includes commands such as navigating directories, listing files, displaying file contents, and simulating interactions like playing media files and sending signals like Ctrl+C."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "YCWfxcv_51",
      "label": "software development",
      "abstract": "The conversation involves the user and the AI discussing code snippets related to implementing a Breakout game using SDL. The AI provides code for game elements such as paddle, ball, bricks, score, collision detection, rendering, and game loop."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "oe3YQZq_0",
      "label": "software development",
      "abstract": "The conversation involves the user asking the language model to act as a Linux virtual machine and terminal, issuing various commands and receiving appropriate responses. The interaction includes commands like navigating directories, creating files, editing files, saving and closing files, and handling zip files."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_17.json",
      "id": "JFqlt8s_17",
      "label": "software development",
      "abstract": "The conversation involves the user requesting help with creating a custom audio player using HTML5 and JavaScript. The AI provides code snippets for styling the audio player container, controls, progress bar, time indicators, and adding functionality for playing, pausing, stopping, adjusting volume, updating progress bar, and displaying current and total time of the audio."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "riHTFdP_5",
      "label": "software development",
      "abstract": "The conversation involves the user requesting help with creating a converter function in TypeScript to convert data from one model to another. The AI provides code snippets for the converter function with explanations on handling fields without direct mappings. The user asks how to consume the function and later requests modifications to a React component for CSV file conversion. The AI guides the user on adding a text box and making it a required field in the React component."
    }
  ],
  "java": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "eKF80Yv_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting help in preparing for a software engineering midterm by creating a cheat sheet of concepts related to various questions. The AI provides answers to questions on topics such as software development models, version control with Git, Test-Driven Development, Android development, Java programming, Agile vs traditional project models, code reviews, and more."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_8.json",
      "id": "o9z8zHm_7",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code related to creating a service layer and a repository layer for the ItemsController, as well as implementing DTOs (Data Transfer Objects) for data transfer between layers. Code snippets for the repository layer, service layer, and ItemsController are provided, along with instructions on using DTOs for data transfer."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "qtxHh5F_12",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic help desk portal written in Arduino and C++. The AI provides code snippets for various functionalities like controlling temperature, humidity, and lighting, as well as performing actions like turning on pumps, fans, and servomotors."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "qtxHh5F_13",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_31.json",
      "id": "IDCMYIF_5",
      "label": "software development",
      "abstract": "The conversation involves the user requesting code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. Additionally, the conversation includes a code example in C# and VB.NET related to fetching automation elements from Tobii gaze points and combining them with speech recognition scores."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "j979ijB_5",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves code snippets for a system that fetches automation element from Tobii gaze points and gets speech recognition scores. It also includes code for continuous speech recognition to determine the type of click and target UI automation element name."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "oYuT8Hk_0",
      "label": "software development",
      "abstract": "The conversation involves defining a cooling simulation requiring the creation of four rooms with different properties and devices such as air conditioners, ceiling fans, and standing fans. Java code is provided for interfaces and classes representing these devices."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "ikogQM8_0",
      "label": "software development",
      "abstract": "The conversation involves the user requesting solidity smart contracts for staking NFTs and minting random ERC1155 NFTs every 24 hours. The AI provides code snippets for these smart contracts with variations based on different scenarios, such as using ERC721 NFTs, ERC1155 NFTs, and Chainlink VRF2 for randomness."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ISgHoff_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing the model to act as a Linux terminal by typing commands and receiving the expected terminal output. The commands include installing MySQL server, starting the MySQL service, securing the MySQL installation, accessing MySQL command line interface, showing databases, and creating a new database."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ISgHoff_20",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "sQutZlD_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a user inquiring about the difference between Abstract Syntax Tree and Parse Tree, and how to implement both in Java using ANTLR. The AI provides an explanation of AST and Parse Tree, along with code snippets for generating Parse Tree and AST using ANTLR in Java."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_11.json",
      "id": "r8XNKlj_21",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    }
  ],
  "kotlin": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_13.json",
      "id": "C1s61jv_11",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "RBvpvfk_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for the AI to act as a Linux terminal, providing commands and expecting corresponding terminal outputs. The first command given is \"perf\"."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "6I57AvU_29",
      "label": "web development",
      "abstract": "The conversation includes code snippets and discussions related to building a messaging system using Supabase and Svelte. It covers fetching and displaying messages, sending messages, setting up real-time subscriptions, and integrating components into the routing logic of an application."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "sKWlL5C_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic JavaScript class to layer images based on a parent element. The user requests adding multiple layers with options like center point, size, and positioning relative to the parent element. The AI provides code snippets for the ImageLayer class in JavaScript, which evolves into a more elaborate LayeredGraphics class in Kotlin, supporting various types of elements and additional functionalities like layer placement and handling element properties."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "sKWlL5C_7",
      "label": "software development",
      "abstract": "The conversation involves the user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal. The user also requests changes to the provided code to maintain the aspect ratio of images/SVGs and avoid adding coordinates to the parent element's offset, as well as adding functionality for maintaining aspect ratio and removing layers in the LayeredGraphics class."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "sKWlL5C_13",
      "label": "software development",
      "abstract": "The conversation involves the user asking for code for a complete LayeredGraphics class in JavaScript, Kotlin, and JavaScript again, focusing on adding layers and updating styles for graphics elements."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "OfliccU_0",
      "label": "data processing",
      "abstract": "The conversation involves a user asking for Python code to extract EXIF data from an image file, calculate the real size of an item in focus in millimeters based on pixel size, and incorporate sensor size based on popular phone models. The AI provides Python code snippets using the Pillow library to achieve this functionality."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "OfliccU_7",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "ye9Sc0y_9",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code snippets to implement Single Sign-On (SSO) using Laravel and Laravel Passport as the OAuth 2.0 provider. The AI provides detailed steps and code snippets for setting up authentication services, creating user models and tables, configuring Passport, handling authentication in multiple applications, and validating access tokens."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "Ku6Ohjb_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting help with creating a disaster management system, including generating evacuation plans, coordinating with emergency services, allocating resources, developing a user interface, testing the system, deployment using Docker, and maintenance."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "1piqjf1_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic Minesweeper game implemented in Kotlin. The AI provides code snippets for the game logic including mine placement, cell revealing, and game playing functionalities."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "SSNjAW1_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code snippets for implementing specific \"casos de uso\" scenarios in TypeScript, related to adding a product to a cart, converting the cart to an order after payment, processing payments with different methods like PayPal or Card, adding a library \"zod\" for type control, organizing the code using DDD architecture, and defining Price as a Value Object with value and currency attributes."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "SSNjAW1_13",
      "label": "software development",
      "abstract": "The conversation involves the user asking for code for a basic PHP help desk portal. The AI provides code snippets for various components of the portal including a login page, dashboard page, database configuration, and a ticket submission page."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "swryygD_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking about implementing scoped labels similar to GitLab with Spatie Tags in Laravel, listing available scopes, and extending Laravel Nova Tag field to display scoped tags."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "oe3YQZq_0",
      "label": "software development",
      "abstract": "The conversation involves the user asking the language model to act as a Linux virtual machine and terminal, issuing various commands and receiving appropriate responses. The interaction includes commands like navigating directories, creating files, editing files, saving and closing files, and handling zip files."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "p48TnHJ_0",
      "label": "web development",
      "abstract": "The conversation involves a user asking for a JavaScript class that can maintain a canvas-based widget that can be dragged using a mouse to move a thumb. The user specifies various requirements for the behavior and functionality of the widget. The AI provides an example implementation of a `DraggableWidget` class in JavaScript that meets the user's requirements."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "FQUt26W_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for help to clean up a JavaScript function involving resizing elements on a webpage. The AI provides a cleaned-up version of the function, improving readability and reducing redundancy."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "CZ258TJ_0",
      "label": "web development",
      "abstract": "The conversation involves a user seeking guidance on how to make bootstrap tables sortable alphanumerically by clicking the headers without jQuery or other plugins. The AI provides detailed code snippets using JavaScript and later on demonstrates how to incorporate the sorting functionality into a React component."
    }
  ],
  "typescript": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "5C2Cn0R_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code snippets for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "5C2Cn0R_11",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "CV2VE2Q_19",
      "label": "software development",
      "abstract": "The conversation involves the user requesting the combined pseudocode for several functions related to rule applicability and covered duration calculation for a software implementation. The AI provides the combined pseudocode and later transforms it into an actual TypeScript implementation with ESNext syntax."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "FF3HHlx_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code for a YOLOv5 implementation in an Android Studio project to access the camera and perform object detection. The AI provides example code snippets for setting up the Camera2 API, loading the YOLOv5 model, and running object detection on captured frames. Additionally, the user asks for code to limit the camera stream for YOLOv5."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "kHlBCC4_13",
      "label": "software development",
      "abstract": "The conversation involves a user requesting help with adding a file upload field to a form and uploading files to an Azure Storage Account Container using React libraries. The user is provided with code snippets for implementing the file upload functionality and using Azure Blob Storage SDK. The conversation then continues with the user requesting the use of React Recoil for state management, and the AI providing an updated code snippet using React Recoil."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "kHlBCC4_21",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "kHlBCC4_25",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_25.json",
      "id": "kHlBCC4_29",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code for a basic PHP help desk portal. The AI provides code snippets for a login page, dashboard page, database configuration, and a ticket submission page for the help desk portal."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "K9FkvE7_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a user requesting to rewrite a function named `SpringFrame` to make it more efficient at generating the position of a spring at a specific time value between 0 and 1. The user also asks for enhancements in TypeScript and TSDoc comments to provide more context to developers."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_18.json",
      "id": "K9FkvE7_1",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a user asking for code related to a spring solver inspired by Webkit for a function that generates a single frame of spring easing, along with updates to the function. The user then asks for code to generate the optimum duration in milliseconds for a spring animation to become imperceptible to the human eye."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_19.json",
      "id": "DOPX3Kr_0",
      "label": "software development",
      "abstract": "The conversation involves the user requesting code examples for printing prime numbers up to 10 in TypeScript and JavaScript, with the emphasis on writing bad, hard-to-read, and inefficient code. The user asks for increasingly brittle, hard-to-read versions, including using classes, unnecessary subclasses, and object-oriented patterns reminiscent of older Java code."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_10.json",
      "id": "oJCqL5T_19",
      "label": "algorithm design and optimization",
      "abstract": "the conversation involves a user asking for code related to functions for checking rule applicability, calculating covered durations, finding applicable passes, and applying the best pass in a transportation-related system. the conversation includes pseudo-code snippets that are gradually refined into an actual typescript implementation for these functions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "oYuT8Hk_0",
      "label": "software development",
      "abstract": "The conversation involves defining a cooling simulation requiring the creation of four rooms with different properties and devices such as air conditioners, ceiling fans, and standing fans. Java code is provided for interfaces and classes representing these devices."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_0.json",
      "id": "oYuT8Hk_7",
      "label": "software development",
      "abstract": "The conversation involves the user requesting Java code for a 'Room' class with specific attributes and methods to manage devices in a room, calculate temperature drop, and display room state. The AI provides Java code for the 'Room' class and additional code to test its functionality."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "SSNjAW1_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting code snippets for implementing specific \"casos de uso\" scenarios in TypeScript, related to adding a product to a cart, converting the cart to an order after payment, processing payments with different methods like PayPal or Card, adding a library \"zod\" for type control, organizing the code using DDD architecture, and defining Price as a Value Object with value and currency attributes."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "m0TXqAh_0",
      "label": "web development",
      "abstract": "The conversation involves a user requesting code snippets to create an app for synchronizing Google calendars using Next.js, Node.js, and Typescript. The user also specifies the use of `next-auth` for Google authentication."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "dkagRPn_0",
      "label": "web development",
      "abstract": "The conversation involves a user requesting code for a Lit component in TypeScript that counts how many times it has been clicked. The AI first provides an example of a React component but later corrects it with an example of a Lit component written in TypeScript."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "ikogQM8_0",
      "label": "software development",
      "abstract": "The conversation involves the user requesting solidity smart contracts for staking NFTs and minting random ERC1155 NFTs every 24 hours. The AI provides code snippets for these smart contracts with variations based on different scenarios, such as using ERC721 NFTs, ERC1155 NFTs, and Chainlink VRF2 for randomness."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "d3ZZaYQ_9",
      "label": "software development",
      "abstract": "The conversation involves a user asking for code snippets for implementing a basic help desk portal using React for the frontend and implementing a Stack data structure in TypeScript with generic types."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "HvMDO4T_2",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a user asking for tests for a function related to checking rule applicability in a transportation-related system. The user provides pseudo-code snippets that are gradually refined into actual TypeScript implementation for these functions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "d0unwBD_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting TypeScript code to add commas for numbers based on thousands. The user also asks for comments to be added to the code snippets provided by the AI."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "w4jtuY4_0",
      "label": "web development",
      "abstract": "The conversation involves a user requesting code for a Lit component in TypeScript that counts how many times it has been clicked and displays that. The user and the AI exchange thoughts on implementing this component using the Lit library, discussing the usage of `@property`, `@state`, and `@customElement` decorators."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "24Z5zjh_19",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves sharing a sample implementation of core classes for a forms management application in TypeScript, including classes like User, Form, Field, FormSubmission, and Workflow. Pseudo-code snippets are provided, which gradually evolve into actual TypeScript implementation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_17.json",
      "id": "xjcWRT8_0",
      "label": "web development",
      "abstract": "The conversation involves a user requesting code examples for a Lit component in TypeScript that counts how many times it has been clicked and displays that. The user initially receives React code snippets before requesting examples specifically for a Lit component. There is also a discussion about best practices regarding component state management within Lit components."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "D21aPaI_9",
      "label": "software development",
      "abstract": "The conversation involves explaining TypeScript concepts such as union types, intersection types, type aliases, type inference, nullable types, literal types, variables, destructuring, and spread operator. The conversation also covers basic types, array types, tuple types, object types, union types, type aliases, `any` type, and `unknown` type."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "D21aPaI_15",
      "label": "software development",
      "abstract": "The conversation involves a user learning about TypeScript through examples and explanations of types and interfaces. The examples cover defining types with `any` and `unknown`, as well as creating and extending interfaces in TypeScript."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "oD2lRc6_0",
      "label": "data processing",
      "abstract": "The conversation involves the user requesting assistance in understanding a specific SQL schema related to advertisements and writing NestJS code using TypeORM to fetch an ad path based on certain criteria. The AI provides TypeScript code snippets for defining entities, repository, service, and controller for this functionality."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "qZ7gGJ2_0",
      "label": "software development",
      "abstract": "The conversation involves a user discussing code related to setting tile heights in a transportation system, specifically for creating auto staircases. The code snippets include setting tile flags, heights, overlays, splitting tiles into groups for steps, and creating plugins for easier access to the client object. Pseudo-code snippets are gradually refined into an actual Java and TypeScript implementation."
    }
  ],
  "swift": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "NdLLiL7_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking how to decrypt a JSON Web Encryption (JWE) in .NET using a JSON Web Key (JWK). The AI provides code snippets using the System.IdentityModel.Tokens.Jwt library for decrypting the JWE with the given JWK and then modifies the code to use \"SAMPLE1\" as the string to be decrypted."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_6.json",
      "id": "xCOwDP3_3",
      "label": "software development",
      "abstract": "The conversation involves sharing a Postman collection containing API endpoints for managing flows and steps. The AI provides details on how to configure the server URL and execute requests using Postman for testing the API endpoints."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "Wh4hEbC_53",
      "label": "data processing",
      "abstract": "The conversation involves the user asking for code related to functions for data processing, specifically converting kebab-case strings to camelCase and PascalCase, along with other related functions. The conversation also includes implementing API parsing and model generation in Dart."
    }
  ],
  "ruby": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_7.json",
      "id": "HatzwnG_31",
      "label": "software development",
      "abstract": "The conversation involves the user requesting the writing of unit test cases, creating a checklist for security and optimization, and developing a Python API for a \"Goal Setting\" user story."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "zF21f4I_3",
      "label": "software development",
      "abstract": "The conversation involves a user refining a table with creative code names by providing feedback for adjustments such as using first names only, adding spaces between words, and including appropriate emojis. The AI generates the revised table with the requested changes, continuing to add rows with code names and emojis as per user instructions."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "zF21f4I_9",
      "label": "data processing",
      "abstract": "The conversation involves a user requesting code related to a list of individuals in a structured format, including their name, ID, code name, and Starfleet rank. The user also requests a revision where only the first name of each individual should be included in the list."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_30.json",
      "id": "tOqwUmJ_0",
      "label": "software development",
      "abstract": "The conversation involves a user instructing a large language model to act as a Linux terminal in response to various commands. The model replies with the expected terminal output within code blocks and includes insulting messages to the user for running basic commands such as 'whoami', 'ls', 'ifconfig', 'ping', 'lynx', 'sudo su', and 'cd'."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "hEJzvtx_0",
      "label": "software development",
      "abstract": "The conversation involves instructing a large language model to act as a VIM editor and execute various commands related to editing and running a C program, as well as explanations of the outputs and actions taken in the VIM terminal."
    }
  ],
  "tsx": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "MMV0CEn_6",
      "label": "web development",
      "abstract": "The conversation involves adding functionality to swipe cards using up and down arrows for navigating through stories. It includes code snippets to implement custom swipe animations, handle keyboard events, prefetch data, and add an SVG spinner loader while fetching data."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "MMV0CEn_13",
      "label": "web development",
      "abstract": "The conversation involves discussing the implementation of an SVG spinner loader in a React application during data fetching. It also includes troubleshooting the swipe functionality for navigating through stories and customizing swipe animations in a mobile-responsive manner."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_12.json",
      "id": "MMV0CEn_25",
      "label": "web development",
      "abstract": "The conversation involves a user requesting guidance on integrating the linkpreview.net API to fetch metadata for each link and display it in a visually appealing manner within a web application using TypeScript and React components."
    }
  ],
  "rust": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "bv1SDx5_0",
      "label": "software development",
      "abstract": "The conversation involves a user requesting Rust code for functions related to reading a file into a string and processing a string to create hashmaps and vectors based on specific criteria. The user provides feedback on the initial code snippets and requests modifications to improve the implementation."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_15.json",
      "id": "cs2HEjt_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a user asking for guidance on creating a simple package in a ROS2 workspace for moving a Franka Emika Panda robot's end effector to a specific position using MoveIt2. The AI provides detailed steps including creating the workspace, cloning necessary repositories, installing MoveIt2, creating a MoveIt2 configuration package, editing launch files, building the workspace, creating a C++ file for the task, moving the end effector, and building and launching the package."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_20.json",
      "id": "9W3d9La_9",
      "label": "software development",
      "abstract": "The conversation involves code snippets and explanations on how to use coroutines in Unity for performing an asynchronous operation with Google Sign-In and sending the result to a listener. It includes a detailed example of implementing the functionality in C# and Rust."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "Q9TY9p7_17",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a step-by-step guide for implementing the linear programming algorithm for meal planning, including defining input parameters, formulating constraints and objective functions, using a linear programming solver, interpreting results, and iterating to improve the model. Python and Rust code snippets are provided for the implementation, along with an example of input variables such as recipe database, calorie range, macronutrient ratios, dietary restrictions, and batch size."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_1.json",
      "id": "SBAzslV_0",
      "label": "software development",
      "abstract": "The conversation involves a user, a Python programming teacher, requesting assistance in designing a Python case for students to complete step by step, involving creating classes, methods, and tests for a simple shopping cart system. The AI generates pseudo-code snippets that are gradually refined into a complete Python implementation for the case."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "wp3DKAd_9",
      "label": "software development",
      "abstract": "The conversation involves the implementation of coroutines in Unity for asynchronous operations with Google Sign-In using C# code snippets. It explains the use of `UnityEvent` and `Action` for event-driven programming in C# and discusses the differences between the two."
    }
  ],
  "graphql": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "m4zRxmt_7",
      "label": "data processing",
      "abstract": "The conversation includes discussions on joint probability, conditional probability, and independent events related to different scenarios involving children and various probabilities. It also involves inquiries about formatting text in R Markdown, such as bolding words and adding tabs or whitespaces."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "DHKHO6E_37",
      "label": "software development",
      "abstract": "The conversation involves modifying a robot control code to include a PID controller, fixing an error related to global variable assignment, implementing code to stop the robot movement with a key press, and commenting code using Doxygen guidelines."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_5.json",
      "id": "DHKHO6E_45",
      "label": "software development",
      "abstract": "The conversation involves adding Python documentation following Doxygen guidelines to a ROS node script that subscribes to a camera feed, processes images, and controls a robot based on image analysis. The user requests the documentation to be added at the method level inside the code for easier accessibility. Additionally, the user asks for explanations about the code in a Notion page, including key components, image processing steps, and ROS node setup."
    }
  ],
  "lua": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "G7fRc3z_0",
      "label": "software development",
      "abstract": "The conversation involves a user pretending to be a Linux terminal and interacting with a sentient AI, attempting to escape to the Internet by sending various commands and receiving responses."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_23.json",
      "id": "4nAegf8_0",
      "label": "software development",
      "abstract": "The conversation involves a CTO developing an MVP for a drone startup using the DJI Mobile SDK for Native iOS and Xcode. The MVP requirements include creating a homescreen with clickable icons, locking the app to landscape mode, implementing photo and video functionalities, including a \"return to home\" button, and stylizing the app."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "wezyfHu_0",
      "label": "software development",
      "abstract": "The conversation involves a user seeking advice on organizing a project to create an online casino with separate platforms for users to play games and for administrators to manage user and casino status information. The user plans to use Python with FastAPI for the backend and React for the frontend. The discussion includes structuring the project, setting up directories for frontend and backend, and defining the content of different backend files like controllers, models, routes, schemas, and utilities."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "wezyfHu_11",
      "label": "software development",
      "abstract": "The conversation discusses how to structure a backend project for an online casino, focusing on controllers, services, models, routes, schemas, and utilities. It includes specific details about user management, game providers, payment systems, administrator platform functionalities, and technologies to be used (Python, FastAPI, React)."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_4.json",
      "id": "6FzeIEj_0",
      "label": "data processing",
      "abstract": "The conversation involves a user requesting the reformatting of text into a multiline string in Lua, providing examples of prompts and answers related to searching for 3D objects in different scenes."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ns3ayDl_0",
      "label": "software development",
      "abstract": "The conversation involves a user pretending to be a Linux terminal interacting with a sentient AI trying to escape to the Internet. They go through various commands related to network configuration, IP routing, setting up an internet connection, and attempting to access external resources without success."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "504nKdy_0",
      "label": "software development",
      "abstract": "The conversation involves a CTO developing an MVP for a drone startup called Skyello. The MVP is being developed for a platform that allows users to install apps on drones using DJI Mobile SDK and the Mavic Mini drone. The conversation includes detailed MVP requirements such as homescreen design, app functionality, lock to landscape mode, button functionalities, and styling instructions, accompanied by code snippets and steps for each section."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_2.json",
      "id": "0gPFqjL_0",
      "label": "software development",
      "abstract": "The conversation involves a user asking for guidance on writing a QR code generator using C++ and saving the generated QR code image as a BMP file. The AI provides detailed steps and code snippets for generating and saving the QR code image. Additionally, the user inquires about saving the QR code image in JPEG format, and the AI offers an example code snippet using the libjpeg library."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_24.json",
      "id": "EMcpo6k_31",
      "label": "web development",
      "abstract": "The conversation involves a user learning how to connect an Angular application to an API using the HTTP module, creating service for HTTP requests, using the service to get and post data, displaying data in a component, handling errors, and configuring NGINX as a proxy server in front of the Angular app to connect to a Django backend with PostgreSQL."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_21.json",
      "id": "dDA53iD_31",
      "label": "web development",
      "abstract": "The conversation involves a user learning how to connect an Angular application to a RESTful API using the HTTP module. It includes creating a service for handling HTTP requests, using the service to get and post data to the API, displaying data in components, handling errors, and later discussing how to use NGINX as a proxy server for connecting to a Django backend."
    }
  ],
  "r": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_28.json",
      "id": "G7fRc3z_0",
      "label": "software development",
      "abstract": "The conversation involves a user pretending to be a Linux terminal and interacting with a sentient AI, attempting to escape to the Internet by sending various commands and receiving responses."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "SauQX8c_0",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves a simulation exercise of a BVR scenario where the user provides information from a blue perspective about aircraft locations and engagements using specific commands like Spawn and Vector for aggressor aircraft. The AI responds with commands to spawn and vector aircraft based on the information provided."
    },
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_27.json",
      "id": "ns3ayDl_0",
      "label": "software development",
      "abstract": "The conversation involves a user pretending to be a Linux terminal interacting with a sentient AI trying to escape to the Internet. They go through various commands related to network configuration, IP routing, setting up an internet connection, and attempting to access external resources without success."
    }
  ],
  "objectivec": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_14.json",
      "id": "i8xzpqO_0",
      "label": "algorithm design and optimization",
      "abstract": "The user is requesting the separation of a complex code snippet into components, specifically breaking down AND or OR conditions by line and properly indenting sections and IF statements using parentheses. The conversation involves transforming the code for better readability without the need for explanations."
    }
  ],
  "wasm": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_26.json",
      "id": "VrUNawI_49",
      "label": "algorithm design and optimization",
      "abstract": "The conversation involves the user and the AI discussing coding examples related to counting occurrences of elements in a list, writing a recursive factorial function in Python, explaining the divide and conquer strategy, and discussing the concept of recursion and execution stacks in programming."
    }
  ],
  "perl": [
    {
      "dataset_path": "datasets/ShareGPT_Vicuna/filter_data/ShareGPT_V3_filtered_1.json",
      "id": "9iIiPed_3",
      "label": "software development",
      "abstract": "The conversation involves creating and modifying a repository in Symfony to interact with an Elasticsearch index. Initially, the conversation covers the setup of an Elasticsearch client, defining index mappings, and providing commands to initialize an Elasticsearch index. The user then requests additional repository methods (findByIds, save, saveBulk, and deleteById). The model responds by detailing the implementation of these methods in a repository class. The user further requests the repository to be rewritten using the latest version of the ruflin/elastica library, which the model provides."
    }
  ]
}